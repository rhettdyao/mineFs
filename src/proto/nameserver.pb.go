// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nameserver.proto

package mineFs_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChunkServerInfo struct {
	Id             int32             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Address        string            `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Ipaddress      string            `protobuf:"bytes,18,opt,name=ipaddress" json:"ipaddress,omitempty"`
	StartTime      string            `protobuf:"bytes,17,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	LastHeartbeat  int32             `protobuf:"varint,3,opt,name=last_heartbeat,json=lastHeartbeat" json:"last_heartbeat,omitempty"`
	DataSize       int64             `protobuf:"varint,4,opt,name=data_size,json=dataSize" json:"data_size,omitempty"`
	DiskQuota      int64             `protobuf:"varint,5,opt,name=disk_quota,json=diskQuota" json:"disk_quota,omitempty"`
	BlockNum       int32             `protobuf:"varint,7,opt,name=block_num,json=blockNum" json:"block_num,omitempty"`
	IsDead         bool              `protobuf:"varint,8,opt,name=is_dead,json=isDead" json:"is_dead,omitempty"`
	Status         ChunkServerStatus `protobuf:"varint,9,opt,name=status,enum=mineFs.proto.ChunkServerStatus" json:"status,omitempty"`
	Ip             int32             `protobuf:"varint,10,opt,name=ip" json:"ip,omitempty"`
	Buffers        int32             `protobuf:"varint,11,opt,name=buffers" json:"buffers,omitempty"`
	PendingBuf     int32             `protobuf:"varint,28,opt,name=pending_buf,json=pendingBuf" json:"pending_buf,omitempty"`
	PendingRecover int32             `protobuf:"varint,29,opt,name=pending_recover,json=pendingRecover" json:"pending_recover,omitempty"`
	Kick           bool              `protobuf:"varint,12,opt,name=kick" json:"kick,omitempty"`
	Zone           string            `protobuf:"bytes,13,opt,name=zone" json:"zone,omitempty"`
	Datacenter     string            `protobuf:"bytes,14,opt,name=datacenter" json:"datacenter,omitempty"`
	Rack           string            `protobuf:"bytes,15,opt,name=rack" json:"rack,omitempty"`
	Tag            string            `protobuf:"bytes,16,opt,name=tag" json:"tag,omitempty"`
	// running status
	Load                 float64  `protobuf:"fixed64,20,opt,name=load" json:"load,omitempty"`
	WQps                 int32    `protobuf:"varint,21,opt,name=w_qps,json=wQps" json:"w_qps,omitempty"`
	WSpeed               int64    `protobuf:"varint,22,opt,name=w_speed,json=wSpeed" json:"w_speed,omitempty"`
	RQps                 int32    `protobuf:"varint,23,opt,name=r_qps,json=rQps" json:"r_qps,omitempty"`
	RSpeed               int64    `protobuf:"varint,24,opt,name=r_speed,json=rSpeed" json:"r_speed,omitempty"`
	WritingBuffers       int64    `protobuf:"varint,25,opt,name=writing_buffers,json=writingBuffers" json:"writing_buffers,omitempty"`
	ActiveBlocks         int64    `protobuf:"varint,26,opt,name=active_blocks,json=activeBlocks" json:"active_blocks,omitempty"`
	RecoverSpeed         int64    `protobuf:"varint,27,opt,name=recover_speed,json=recoverSpeed" json:"recover_speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkServerInfo) Reset()         { *m = ChunkServerInfo{} }
func (m *ChunkServerInfo) String() string { return proto.CompactTextString(m) }
func (*ChunkServerInfo) ProtoMessage()    {}
func (*ChunkServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{0}
}
func (m *ChunkServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkServerInfo.Unmarshal(m, b)
}
func (m *ChunkServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkServerInfo.Marshal(b, m, deterministic)
}
func (dst *ChunkServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkServerInfo.Merge(dst, src)
}
func (m *ChunkServerInfo) XXX_Size() int {
	return xxx_messageInfo_ChunkServerInfo.Size(m)
}
func (m *ChunkServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkServerInfo proto.InternalMessageInfo

func (m *ChunkServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChunkServerInfo) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ChunkServerInfo) GetIpaddress() string {
	if m != nil {
		return m.Ipaddress
	}
	return ""
}

func (m *ChunkServerInfo) GetStartTime() string {
	if m != nil {
		return m.StartTime
	}
	return ""
}

func (m *ChunkServerInfo) GetLastHeartbeat() int32 {
	if m != nil {
		return m.LastHeartbeat
	}
	return 0
}

func (m *ChunkServerInfo) GetDataSize() int64 {
	if m != nil {
		return m.DataSize
	}
	return 0
}

func (m *ChunkServerInfo) GetDiskQuota() int64 {
	if m != nil {
		return m.DiskQuota
	}
	return 0
}

func (m *ChunkServerInfo) GetBlockNum() int32 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *ChunkServerInfo) GetIsDead() bool {
	if m != nil {
		return m.IsDead
	}
	return false
}

func (m *ChunkServerInfo) GetStatus() ChunkServerStatus {
	if m != nil {
		return m.Status
	}
	return ChunkServerStatus_kCsUnkown
}

func (m *ChunkServerInfo) GetIp() int32 {
	if m != nil {
		return m.Ip
	}
	return 0
}

func (m *ChunkServerInfo) GetBuffers() int32 {
	if m != nil {
		return m.Buffers
	}
	return 0
}

func (m *ChunkServerInfo) GetPendingBuf() int32 {
	if m != nil {
		return m.PendingBuf
	}
	return 0
}

func (m *ChunkServerInfo) GetPendingRecover() int32 {
	if m != nil {
		return m.PendingRecover
	}
	return 0
}

func (m *ChunkServerInfo) GetKick() bool {
	if m != nil {
		return m.Kick
	}
	return false
}

func (m *ChunkServerInfo) GetZone() string {
	if m != nil {
		return m.Zone
	}
	return ""
}

func (m *ChunkServerInfo) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *ChunkServerInfo) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *ChunkServerInfo) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *ChunkServerInfo) GetLoad() float64 {
	if m != nil {
		return m.Load
	}
	return 0
}

func (m *ChunkServerInfo) GetWQps() int32 {
	if m != nil {
		return m.WQps
	}
	return 0
}

func (m *ChunkServerInfo) GetWSpeed() int64 {
	if m != nil {
		return m.WSpeed
	}
	return 0
}

func (m *ChunkServerInfo) GetRQps() int32 {
	if m != nil {
		return m.RQps
	}
	return 0
}

func (m *ChunkServerInfo) GetRSpeed() int64 {
	if m != nil {
		return m.RSpeed
	}
	return 0
}

func (m *ChunkServerInfo) GetWritingBuffers() int64 {
	if m != nil {
		return m.WritingBuffers
	}
	return 0
}

func (m *ChunkServerInfo) GetActiveBlocks() int64 {
	if m != nil {
		return m.ActiveBlocks
	}
	return 0
}

func (m *ChunkServerInfo) GetRecoverSpeed() int64 {
	if m != nil {
		return m.RecoverSpeed
	}
	return 0
}

type CreateFileRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	Mode                 int32    `protobuf:"varint,3,opt,name=mode" json:"mode,omitempty"`
	Flags                int32    `protobuf:"varint,4,opt,name=flags" json:"flags,omitempty"`
	ReplicaNum           int32    `protobuf:"varint,5,opt,name=replica_num,json=replicaNum" json:"replica_num,omitempty"`
	User                 string   `protobuf:"bytes,7,opt,name=user" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateFileRequest) Reset()         { *m = CreateFileRequest{} }
func (m *CreateFileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateFileRequest) ProtoMessage()    {}
func (*CreateFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{1}
}
func (m *CreateFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileRequest.Unmarshal(m, b)
}
func (m *CreateFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileRequest.Marshal(b, m, deterministic)
}
func (dst *CreateFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileRequest.Merge(dst, src)
}
func (m *CreateFileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateFileRequest.Size(m)
}
func (m *CreateFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileRequest proto.InternalMessageInfo

func (m *CreateFileRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *CreateFileRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *CreateFileRequest) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *CreateFileRequest) GetFlags() int32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *CreateFileRequest) GetReplicaNum() int32 {
	if m != nil {
		return m.ReplicaNum
	}
	return 0
}

func (m *CreateFileRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type CreateFileResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateFileResponse) Reset()         { *m = CreateFileResponse{} }
func (m *CreateFileResponse) String() string { return proto.CompactTextString(m) }
func (*CreateFileResponse) ProtoMessage()    {}
func (*CreateFileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{2}
}
func (m *CreateFileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateFileResponse.Unmarshal(m, b)
}
func (m *CreateFileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateFileResponse.Marshal(b, m, deterministic)
}
func (dst *CreateFileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateFileResponse.Merge(dst, src)
}
func (m *CreateFileResponse) XXX_Size() int {
	return xxx_messageInfo_CreateFileResponse.Size(m)
}
func (m *CreateFileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateFileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateFileResponse proto.InternalMessageInfo

func (m *CreateFileResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *CreateFileResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type LocatedBlock struct {
	BlockId              int64              `protobuf:"varint,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	BlockSize            int64              `protobuf:"varint,2,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	Chains               []*ChunkServerInfo `protobuf:"bytes,3,rep,name=chains" json:"chains,omitempty"`
	Status               int32              `protobuf:"varint,4,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LocatedBlock) Reset()         { *m = LocatedBlock{} }
func (m *LocatedBlock) String() string { return proto.CompactTextString(m) }
func (*LocatedBlock) ProtoMessage()    {}
func (*LocatedBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{3}
}
func (m *LocatedBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocatedBlock.Unmarshal(m, b)
}
func (m *LocatedBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocatedBlock.Marshal(b, m, deterministic)
}
func (dst *LocatedBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocatedBlock.Merge(dst, src)
}
func (m *LocatedBlock) XXX_Size() int {
	return xxx_messageInfo_LocatedBlock.Size(m)
}
func (m *LocatedBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_LocatedBlock.DiscardUnknown(m)
}

var xxx_messageInfo_LocatedBlock proto.InternalMessageInfo

func (m *LocatedBlock) GetBlockId() int64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *LocatedBlock) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *LocatedBlock) GetChains() []*ChunkServerInfo {
	if m != nil {
		return m.Chains
	}
	return nil
}

func (m *LocatedBlock) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type FileLocationRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	Offset               int64    `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	BlockNum             int32    `protobuf:"varint,4,opt,name=block_num,json=blockNum" json:"block_num,omitempty"`
	User                 string   `protobuf:"bytes,5,opt,name=user" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileLocationRequest) Reset()         { *m = FileLocationRequest{} }
func (m *FileLocationRequest) String() string { return proto.CompactTextString(m) }
func (*FileLocationRequest) ProtoMessage()    {}
func (*FileLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{4}
}
func (m *FileLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLocationRequest.Unmarshal(m, b)
}
func (m *FileLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLocationRequest.Marshal(b, m, deterministic)
}
func (dst *FileLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLocationRequest.Merge(dst, src)
}
func (m *FileLocationRequest) XXX_Size() int {
	return xxx_messageInfo_FileLocationRequest.Size(m)
}
func (m *FileLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FileLocationRequest proto.InternalMessageInfo

func (m *FileLocationRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *FileLocationRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileLocationRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *FileLocationRequest) GetBlockNum() int32 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *FileLocationRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type FileLocationResponse struct {
	SequenceId           int64           `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode      `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	Blocks               []*LocatedBlock `protobuf:"bytes,3,rep,name=blocks" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FileLocationResponse) Reset()         { *m = FileLocationResponse{} }
func (m *FileLocationResponse) String() string { return proto.CompactTextString(m) }
func (*FileLocationResponse) ProtoMessage()    {}
func (*FileLocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{5}
}
func (m *FileLocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLocationResponse.Unmarshal(m, b)
}
func (m *FileLocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLocationResponse.Marshal(b, m, deterministic)
}
func (dst *FileLocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLocationResponse.Merge(dst, src)
}
func (m *FileLocationResponse) XXX_Size() int {
	return xxx_messageInfo_FileLocationResponse.Size(m)
}
func (m *FileLocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileLocationResponse proto.InternalMessageInfo

func (m *FileLocationResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *FileLocationResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *FileLocationResponse) GetBlocks() []*LocatedBlock {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type ListDirectoryRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDirectoryRequest) Reset()         { *m = ListDirectoryRequest{} }
func (m *ListDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*ListDirectoryRequest) ProtoMessage()    {}
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{6}
}
func (m *ListDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDirectoryRequest.Unmarshal(m, b)
}
func (m *ListDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDirectoryRequest.Marshal(b, m, deterministic)
}
func (dst *ListDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDirectoryRequest.Merge(dst, src)
}
func (m *ListDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_ListDirectoryRequest.Size(m)
}
func (m *ListDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDirectoryRequest proto.InternalMessageInfo

func (m *ListDirectoryRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ListDirectoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ListDirectoryResponse struct {
	SequenceId           int64       `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode  `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	Files                []*FileInfo `protobuf:"bytes,3,rep,name=files" json:"files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListDirectoryResponse) Reset()         { *m = ListDirectoryResponse{} }
func (m *ListDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*ListDirectoryResponse) ProtoMessage()    {}
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{7}
}
func (m *ListDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDirectoryResponse.Unmarshal(m, b)
}
func (m *ListDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDirectoryResponse.Marshal(b, m, deterministic)
}
func (dst *ListDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDirectoryResponse.Merge(dst, src)
}
func (m *ListDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_ListDirectoryResponse.Size(m)
}
func (m *ListDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDirectoryResponse proto.InternalMessageInfo

func (m *ListDirectoryResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ListDirectoryResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *ListDirectoryResponse) GetFiles() []*FileInfo {
	if m != nil {
		return m.Files
	}
	return nil
}

type StatRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatRequest) Reset()         { *m = StatRequest{} }
func (m *StatRequest) String() string { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()    {}
func (*StatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{8}
}
func (m *StatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatRequest.Unmarshal(m, b)
}
func (m *StatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatRequest.Marshal(b, m, deterministic)
}
func (dst *StatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatRequest.Merge(dst, src)
}
func (m *StatRequest) XXX_Size() int {
	return xxx_messageInfo_StatRequest.Size(m)
}
func (m *StatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatRequest proto.InternalMessageInfo

func (m *StatRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *StatRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type StatResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	FileInfo             *FileInfo  `protobuf:"bytes,3,opt,name=file_info,json=fileInfo" json:"file_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *StatResponse) Reset()         { *m = StatResponse{} }
func (m *StatResponse) String() string { return proto.CompactTextString(m) }
func (*StatResponse) ProtoMessage()    {}
func (*StatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{9}
}
func (m *StatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatResponse.Unmarshal(m, b)
}
func (m *StatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatResponse.Marshal(b, m, deterministic)
}
func (dst *StatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatResponse.Merge(dst, src)
}
func (m *StatResponse) XXX_Size() int {
	return xxx_messageInfo_StatResponse.Size(m)
}
func (m *StatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatResponse proto.InternalMessageInfo

func (m *StatResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *StatResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *StatResponse) GetFileInfo() *FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

type RenameRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Oldpath              string   `protobuf:"bytes,2,opt,name=oldpath" json:"oldpath,omitempty"`
	Newpath              string   `protobuf:"bytes,3,opt,name=newpath" json:"newpath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenameRequest) Reset()         { *m = RenameRequest{} }
func (m *RenameRequest) String() string { return proto.CompactTextString(m) }
func (*RenameRequest) ProtoMessage()    {}
func (*RenameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{10}
}
func (m *RenameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameRequest.Unmarshal(m, b)
}
func (m *RenameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameRequest.Marshal(b, m, deterministic)
}
func (dst *RenameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameRequest.Merge(dst, src)
}
func (m *RenameRequest) XXX_Size() int {
	return xxx_messageInfo_RenameRequest.Size(m)
}
func (m *RenameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenameRequest proto.InternalMessageInfo

func (m *RenameRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *RenameRequest) GetOldpath() string {
	if m != nil {
		return m.Oldpath
	}
	return ""
}

func (m *RenameRequest) GetNewpath() string {
	if m != nil {
		return m.Newpath
	}
	return ""
}

type RenameResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RenameResponse) Reset()         { *m = RenameResponse{} }
func (m *RenameResponse) String() string { return proto.CompactTextString(m) }
func (*RenameResponse) ProtoMessage()    {}
func (*RenameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{11}
}
func (m *RenameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenameResponse.Unmarshal(m, b)
}
func (m *RenameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenameResponse.Marshal(b, m, deterministic)
}
func (dst *RenameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenameResponse.Merge(dst, src)
}
func (m *RenameResponse) XXX_Size() int {
	return xxx_messageInfo_RenameResponse.Size(m)
}
func (m *RenameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenameResponse proto.InternalMessageInfo

func (m *RenameResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *RenameResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type AddBlockRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	ClientAddress        string   `protobuf:"bytes,3,opt,name=client_address,json=clientAddress" json:"client_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddBlockRequest) Reset()         { *m = AddBlockRequest{} }
func (m *AddBlockRequest) String() string { return proto.CompactTextString(m) }
func (*AddBlockRequest) ProtoMessage()    {}
func (*AddBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{12}
}
func (m *AddBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockRequest.Unmarshal(m, b)
}
func (m *AddBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockRequest.Marshal(b, m, deterministic)
}
func (dst *AddBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockRequest.Merge(dst, src)
}
func (m *AddBlockRequest) XXX_Size() int {
	return xxx_messageInfo_AddBlockRequest.Size(m)
}
func (m *AddBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockRequest proto.InternalMessageInfo

func (m *AddBlockRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *AddBlockRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *AddBlockRequest) GetClientAddress() string {
	if m != nil {
		return m.ClientAddress
	}
	return ""
}

type AddBlockResponse struct {
	SequenceId           int64         `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode    `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	Block                *LocatedBlock `protobuf:"bytes,3,opt,name=block" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddBlockResponse) Reset()         { *m = AddBlockResponse{} }
func (m *AddBlockResponse) String() string { return proto.CompactTextString(m) }
func (*AddBlockResponse) ProtoMessage()    {}
func (*AddBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{13}
}
func (m *AddBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddBlockResponse.Unmarshal(m, b)
}
func (m *AddBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddBlockResponse.Marshal(b, m, deterministic)
}
func (dst *AddBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddBlockResponse.Merge(dst, src)
}
func (m *AddBlockResponse) XXX_Size() int {
	return xxx_messageInfo_AddBlockResponse.Size(m)
}
func (m *AddBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddBlockResponse proto.InternalMessageInfo

func (m *AddBlockResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *AddBlockResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *AddBlockResponse) GetBlock() *LocatedBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

type SyncBlockRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	BlockId              int64    `protobuf:"varint,2,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	FileName             string   `protobuf:"bytes,3,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	Size                 int64    `protobuf:"varint,4,opt,name=size" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncBlockRequest) Reset()         { *m = SyncBlockRequest{} }
func (m *SyncBlockRequest) String() string { return proto.CompactTextString(m) }
func (*SyncBlockRequest) ProtoMessage()    {}
func (*SyncBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{14}
}
func (m *SyncBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncBlockRequest.Unmarshal(m, b)
}
func (m *SyncBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncBlockRequest.Marshal(b, m, deterministic)
}
func (dst *SyncBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncBlockRequest.Merge(dst, src)
}
func (m *SyncBlockRequest) XXX_Size() int {
	return xxx_messageInfo_SyncBlockRequest.Size(m)
}
func (m *SyncBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SyncBlockRequest proto.InternalMessageInfo

func (m *SyncBlockRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *SyncBlockRequest) GetBlockId() int64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *SyncBlockRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *SyncBlockRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type SyncBlockResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SyncBlockResponse) Reset()         { *m = SyncBlockResponse{} }
func (m *SyncBlockResponse) String() string { return proto.CompactTextString(m) }
func (*SyncBlockResponse) ProtoMessage()    {}
func (*SyncBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{15}
}
func (m *SyncBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncBlockResponse.Unmarshal(m, b)
}
func (m *SyncBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncBlockResponse.Marshal(b, m, deterministic)
}
func (dst *SyncBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncBlockResponse.Merge(dst, src)
}
func (m *SyncBlockResponse) XXX_Size() int {
	return xxx_messageInfo_SyncBlockResponse.Size(m)
}
func (m *SyncBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SyncBlockResponse proto.InternalMessageInfo

func (m *SyncBlockResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *SyncBlockResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type FinishBlockRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	BlockId              int64    `protobuf:"varint,2,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	BlockVersion         int64    `protobuf:"varint,3,opt,name=block_version,json=blockVersion" json:"block_version,omitempty"`
	FileName             string   `protobuf:"bytes,4,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	BlockSize            int64    `protobuf:"varint,5,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	CloseWithError       bool     `protobuf:"varint,6,opt,name=close_with_error,json=closeWithError" json:"close_with_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinishBlockRequest) Reset()         { *m = FinishBlockRequest{} }
func (m *FinishBlockRequest) String() string { return proto.CompactTextString(m) }
func (*FinishBlockRequest) ProtoMessage()    {}
func (*FinishBlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{16}
}
func (m *FinishBlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinishBlockRequest.Unmarshal(m, b)
}
func (m *FinishBlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinishBlockRequest.Marshal(b, m, deterministic)
}
func (dst *FinishBlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinishBlockRequest.Merge(dst, src)
}
func (m *FinishBlockRequest) XXX_Size() int {
	return xxx_messageInfo_FinishBlockRequest.Size(m)
}
func (m *FinishBlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FinishBlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FinishBlockRequest proto.InternalMessageInfo

func (m *FinishBlockRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *FinishBlockRequest) GetBlockId() int64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *FinishBlockRequest) GetBlockVersion() int64 {
	if m != nil {
		return m.BlockVersion
	}
	return 0
}

func (m *FinishBlockRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FinishBlockRequest) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *FinishBlockRequest) GetCloseWithError() bool {
	if m != nil {
		return m.CloseWithError
	}
	return false
}

type FinishBlockResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FinishBlockResponse) Reset()         { *m = FinishBlockResponse{} }
func (m *FinishBlockResponse) String() string { return proto.CompactTextString(m) }
func (*FinishBlockResponse) ProtoMessage()    {}
func (*FinishBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{17}
}
func (m *FinishBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinishBlockResponse.Unmarshal(m, b)
}
func (m *FinishBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinishBlockResponse.Marshal(b, m, deterministic)
}
func (dst *FinishBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinishBlockResponse.Merge(dst, src)
}
func (m *FinishBlockResponse) XXX_Size() int {
	return xxx_messageInfo_FinishBlockResponse.Size(m)
}
func (m *FinishBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FinishBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FinishBlockResponse proto.InternalMessageInfo

func (m *FinishBlockResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *FinishBlockResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type UnlinkRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlinkRequest) Reset()         { *m = UnlinkRequest{} }
func (m *UnlinkRequest) String() string { return proto.CompactTextString(m) }
func (*UnlinkRequest) ProtoMessage()    {}
func (*UnlinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{18}
}
func (m *UnlinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlinkRequest.Unmarshal(m, b)
}
func (m *UnlinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlinkRequest.Marshal(b, m, deterministic)
}
func (dst *UnlinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlinkRequest.Merge(dst, src)
}
func (m *UnlinkRequest) XXX_Size() int {
	return xxx_messageInfo_UnlinkRequest.Size(m)
}
func (m *UnlinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlinkRequest proto.InternalMessageInfo

func (m *UnlinkRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *UnlinkRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type UnlinkResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UnlinkResponse) Reset()         { *m = UnlinkResponse{} }
func (m *UnlinkResponse) String() string { return proto.CompactTextString(m) }
func (*UnlinkResponse) ProtoMessage()    {}
func (*UnlinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{19}
}
func (m *UnlinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlinkResponse.Unmarshal(m, b)
}
func (m *UnlinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlinkResponse.Marshal(b, m, deterministic)
}
func (dst *UnlinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlinkResponse.Merge(dst, src)
}
func (m *UnlinkResponse) XXX_Size() int {
	return xxx_messageInfo_UnlinkResponse.Size(m)
}
func (m *UnlinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlinkResponse proto.InternalMessageInfo

func (m *UnlinkResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *UnlinkResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type DeleteDirectoryRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Recursive            bool     `protobuf:"varint,3,opt,name=recursive" json:"recursive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDirectoryRequest) Reset()         { *m = DeleteDirectoryRequest{} }
func (m *DeleteDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDirectoryRequest) ProtoMessage()    {}
func (*DeleteDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{20}
}
func (m *DeleteDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDirectoryRequest.Unmarshal(m, b)
}
func (m *DeleteDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDirectoryRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDirectoryRequest.Merge(dst, src)
}
func (m *DeleteDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDirectoryRequest.Size(m)
}
func (m *DeleteDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDirectoryRequest proto.InternalMessageInfo

func (m *DeleteDirectoryRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *DeleteDirectoryRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *DeleteDirectoryRequest) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

type DeleteDirectoryResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteDirectoryResponse) Reset()         { *m = DeleteDirectoryResponse{} }
func (m *DeleteDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteDirectoryResponse) ProtoMessage()    {}
func (*DeleteDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{21}
}
func (m *DeleteDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDirectoryResponse.Unmarshal(m, b)
}
func (m *DeleteDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDirectoryResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDirectoryResponse.Merge(dst, src)
}
func (m *DeleteDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteDirectoryResponse.Size(m)
}
func (m *DeleteDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDirectoryResponse proto.InternalMessageInfo

func (m *DeleteDirectoryResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *DeleteDirectoryResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type ChangeReplicaNumRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	FileName             string   `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
	ReplicaNum           int32    `protobuf:"varint,3,opt,name=replica_num,json=replicaNum" json:"replica_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeReplicaNumRequest) Reset()         { *m = ChangeReplicaNumRequest{} }
func (m *ChangeReplicaNumRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeReplicaNumRequest) ProtoMessage()    {}
func (*ChangeReplicaNumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{22}
}
func (m *ChangeReplicaNumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeReplicaNumRequest.Unmarshal(m, b)
}
func (m *ChangeReplicaNumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeReplicaNumRequest.Marshal(b, m, deterministic)
}
func (dst *ChangeReplicaNumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeReplicaNumRequest.Merge(dst, src)
}
func (m *ChangeReplicaNumRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeReplicaNumRequest.Size(m)
}
func (m *ChangeReplicaNumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeReplicaNumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeReplicaNumRequest proto.InternalMessageInfo

func (m *ChangeReplicaNumRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ChangeReplicaNumRequest) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *ChangeReplicaNumRequest) GetReplicaNum() int32 {
	if m != nil {
		return m.ReplicaNum
	}
	return 0
}

type ChangeReplicaNumResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChangeReplicaNumResponse) Reset()         { *m = ChangeReplicaNumResponse{} }
func (m *ChangeReplicaNumResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeReplicaNumResponse) ProtoMessage()    {}
func (*ChangeReplicaNumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{23}
}
func (m *ChangeReplicaNumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeReplicaNumResponse.Unmarshal(m, b)
}
func (m *ChangeReplicaNumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeReplicaNumResponse.Marshal(b, m, deterministic)
}
func (dst *ChangeReplicaNumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeReplicaNumResponse.Merge(dst, src)
}
func (m *ChangeReplicaNumResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeReplicaNumResponse.Size(m)
}
func (m *ChangeReplicaNumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeReplicaNumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeReplicaNumResponse proto.InternalMessageInfo

func (m *ChangeReplicaNumResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ChangeReplicaNumResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type HeartBeatRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChunkserverAddr      string   `protobuf:"bytes,2,opt,name=chunkserver_addr,json=chunkserverAddr" json:"chunkserver_addr,omitempty"`
	ChunkserverId        int32    `protobuf:"varint,3,opt,name=chunkserver_id,json=chunkserverId" json:"chunkserver_id,omitempty"`
	NamespaceVersion     int64    `protobuf:"varint,4,opt,name=namespace_version,json=namespaceVersion" json:"namespace_version,omitempty"`
	BlockNum             int32    `protobuf:"varint,5,opt,name=block_num,json=blockNum" json:"block_num,omitempty"`
	DataSize             int64    `protobuf:"varint,6,opt,name=data_size,json=dataSize" json:"data_size,omitempty"`
	Buffers              int32    `protobuf:"varint,7,opt,name=buffers" json:"buffers,omitempty"`
	PendingBuf           int32    `protobuf:"varint,13,opt,name=pending_buf,json=pendingBuf" json:"pending_buf,omitempty"`
	PendingRecover       int32    `protobuf:"varint,14,opt,name=pending_recover,json=pendingRecover" json:"pending_recover,omitempty"`
	WQps                 int32    `protobuf:"varint,8,opt,name=w_qps,json=wQps" json:"w_qps,omitempty"`
	WSpeed               int64    `protobuf:"varint,9,opt,name=w_speed,json=wSpeed" json:"w_speed,omitempty"`
	RQps                 int32    `protobuf:"varint,10,opt,name=r_qps,json=rQps" json:"r_qps,omitempty"`
	RSpeed               int64    `protobuf:"varint,11,opt,name=r_speed,json=rSpeed" json:"r_speed,omitempty"`
	RecoverSpeed         int64    `protobuf:"varint,12,opt,name=recover_speed,json=recoverSpeed" json:"recover_speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartBeatRequest) Reset()         { *m = HeartBeatRequest{} }
func (m *HeartBeatRequest) String() string { return proto.CompactTextString(m) }
func (*HeartBeatRequest) ProtoMessage()    {}
func (*HeartBeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{24}
}
func (m *HeartBeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatRequest.Unmarshal(m, b)
}
func (m *HeartBeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatRequest.Marshal(b, m, deterministic)
}
func (dst *HeartBeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatRequest.Merge(dst, src)
}
func (m *HeartBeatRequest) XXX_Size() int {
	return xxx_messageInfo_HeartBeatRequest.Size(m)
}
func (m *HeartBeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatRequest proto.InternalMessageInfo

func (m *HeartBeatRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *HeartBeatRequest) GetChunkserverAddr() string {
	if m != nil {
		return m.ChunkserverAddr
	}
	return ""
}

func (m *HeartBeatRequest) GetChunkserverId() int32 {
	if m != nil {
		return m.ChunkserverId
	}
	return 0
}

func (m *HeartBeatRequest) GetNamespaceVersion() int64 {
	if m != nil {
		return m.NamespaceVersion
	}
	return 0
}

func (m *HeartBeatRequest) GetBlockNum() int32 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *HeartBeatRequest) GetDataSize() int64 {
	if m != nil {
		return m.DataSize
	}
	return 0
}

func (m *HeartBeatRequest) GetBuffers() int32 {
	if m != nil {
		return m.Buffers
	}
	return 0
}

func (m *HeartBeatRequest) GetPendingBuf() int32 {
	if m != nil {
		return m.PendingBuf
	}
	return 0
}

func (m *HeartBeatRequest) GetPendingRecover() int32 {
	if m != nil {
		return m.PendingRecover
	}
	return 0
}

func (m *HeartBeatRequest) GetWQps() int32 {
	if m != nil {
		return m.WQps
	}
	return 0
}

func (m *HeartBeatRequest) GetWSpeed() int64 {
	if m != nil {
		return m.WSpeed
	}
	return 0
}

func (m *HeartBeatRequest) GetRQps() int32 {
	if m != nil {
		return m.RQps
	}
	return 0
}

func (m *HeartBeatRequest) GetRSpeed() int64 {
	if m != nil {
		return m.RSpeed
	}
	return 0
}

func (m *HeartBeatRequest) GetRecoverSpeed() int64 {
	if m != nil {
		return m.RecoverSpeed
	}
	return 0
}

type HeartBeatResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	NamespaceVersion     int64      `protobuf:"varint,3,opt,name=namespace_version,json=namespaceVersion" json:"namespace_version,omitempty"`
	Kick                 bool       `protobuf:"varint,4,opt,name=kick" json:"kick,omitempty"`
	ReportInterval       int32      `protobuf:"varint,5,opt,name=report_interval,json=reportInterval" json:"report_interval,omitempty"`
	ReportSize           int32      `protobuf:"varint,6,opt,name=report_size,json=reportSize" json:"report_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *HeartBeatResponse) Reset()         { *m = HeartBeatResponse{} }
func (m *HeartBeatResponse) String() string { return proto.CompactTextString(m) }
func (*HeartBeatResponse) ProtoMessage()    {}
func (*HeartBeatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{25}
}
func (m *HeartBeatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeatResponse.Unmarshal(m, b)
}
func (m *HeartBeatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeatResponse.Marshal(b, m, deterministic)
}
func (dst *HeartBeatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeatResponse.Merge(dst, src)
}
func (m *HeartBeatResponse) XXX_Size() int {
	return xxx_messageInfo_HeartBeatResponse.Size(m)
}
func (m *HeartBeatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeatResponse proto.InternalMessageInfo

func (m *HeartBeatResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *HeartBeatResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *HeartBeatResponse) GetNamespaceVersion() int64 {
	if m != nil {
		return m.NamespaceVersion
	}
	return 0
}

func (m *HeartBeatResponse) GetKick() bool {
	if m != nil {
		return m.Kick
	}
	return false
}

func (m *HeartBeatResponse) GetReportInterval() int32 {
	if m != nil {
		return m.ReportInterval
	}
	return 0
}

func (m *HeartBeatResponse) GetReportSize() int32 {
	if m != nil {
		return m.ReportSize
	}
	return 0
}

type ReportBlockInfo struct {
	BlockId              int64    `protobuf:"varint,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	Version              int64    `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
	BlockSize            int64    `protobuf:"varint,3,opt,name=block_size,json=blockSize" json:"block_size,omitempty"`
	IsRecover            bool     `protobuf:"varint,4,opt,name=is_recover,json=isRecover" json:"is_recover,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportBlockInfo) Reset()         { *m = ReportBlockInfo{} }
func (m *ReportBlockInfo) String() string { return proto.CompactTextString(m) }
func (*ReportBlockInfo) ProtoMessage()    {}
func (*ReportBlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{26}
}
func (m *ReportBlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportBlockInfo.Unmarshal(m, b)
}
func (m *ReportBlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportBlockInfo.Marshal(b, m, deterministic)
}
func (dst *ReportBlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportBlockInfo.Merge(dst, src)
}
func (m *ReportBlockInfo) XXX_Size() int {
	return xxx_messageInfo_ReportBlockInfo.Size(m)
}
func (m *ReportBlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportBlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReportBlockInfo proto.InternalMessageInfo

func (m *ReportBlockInfo) GetBlockId() int64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *ReportBlockInfo) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ReportBlockInfo) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *ReportBlockInfo) GetIsRecover() bool {
	if m != nil {
		return m.IsRecover
	}
	return false
}

type ReplicaInfo struct {
	BlockId            int64    `protobuf:"varint,1,opt,name=block_id,json=blockId" json:"block_id,omitempty"`
	ChunkserverAddress []string `protobuf:"bytes,2,rep,name=chunkserver_address,json=chunkserverAddress" json:"chunkserver_address,omitempty"`
	// int64 block_size = 3;
	// int64 block_version = 4;
	Priority             bool     `protobuf:"varint,5,opt,name=priority" json:"priority,omitempty"`
	RecoverTimeout       int32    `protobuf:"varint,6,opt,name=recover_timeout,json=recoverTimeout" json:"recover_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaInfo) Reset()         { *m = ReplicaInfo{} }
func (m *ReplicaInfo) String() string { return proto.CompactTextString(m) }
func (*ReplicaInfo) ProtoMessage()    {}
func (*ReplicaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{27}
}
func (m *ReplicaInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaInfo.Unmarshal(m, b)
}
func (m *ReplicaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaInfo.Marshal(b, m, deterministic)
}
func (dst *ReplicaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaInfo.Merge(dst, src)
}
func (m *ReplicaInfo) XXX_Size() int {
	return xxx_messageInfo_ReplicaInfo.Size(m)
}
func (m *ReplicaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaInfo proto.InternalMessageInfo

func (m *ReplicaInfo) GetBlockId() int64 {
	if m != nil {
		return m.BlockId
	}
	return 0
}

func (m *ReplicaInfo) GetChunkserverAddress() []string {
	if m != nil {
		return m.ChunkserverAddress
	}
	return nil
}

func (m *ReplicaInfo) GetPriority() bool {
	if m != nil {
		return m.Priority
	}
	return false
}

func (m *ReplicaInfo) GetRecoverTimeout() int32 {
	if m != nil {
		return m.RecoverTimeout
	}
	return 0
}

type RegisterRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChunkserverAddr      string   `protobuf:"bytes,3,opt,name=chunkserver_addr,json=chunkserverAddr" json:"chunkserver_addr,omitempty"`
	NamespaceVersion     int64    `protobuf:"varint,4,opt,name=namespace_version,json=namespaceVersion" json:"namespace_version,omitempty"`
	Tag                  string   `protobuf:"bytes,5,opt,name=tag" json:"tag,omitempty"`
	DiskQuota            int64    `protobuf:"varint,7,opt,name=disk_quota,json=diskQuota" json:"disk_quota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{28}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *RegisterRequest) GetChunkserverAddr() string {
	if m != nil {
		return m.ChunkserverAddr
	}
	return ""
}

func (m *RegisterRequest) GetNamespaceVersion() int64 {
	if m != nil {
		return m.NamespaceVersion
	}
	return 0
}

func (m *RegisterRequest) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *RegisterRequest) GetDiskQuota() int64 {
	if m != nil {
		return m.DiskQuota
	}
	return 0
}

type RegisterResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	ChunkserverId        int32      `protobuf:"varint,5,opt,name=chunkserver_id,json=chunkserverId" json:"chunkserver_id,omitempty"`
	NamespaceVersion     int64      `protobuf:"varint,6,opt,name=namespace_version,json=namespaceVersion" json:"namespace_version,omitempty"`
	ReportInterval       int32      `protobuf:"varint,7,opt,name=report_interval,json=reportInterval" json:"report_interval,omitempty"`
	ReportSize           int32      `protobuf:"varint,8,opt,name=report_size,json=reportSize" json:"report_size,omitempty"`
	ReportId             int64      `protobuf:"varint,9,opt,name=report_id,json=reportId" json:"report_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{29}
}
func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(dst, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *RegisterResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *RegisterResponse) GetChunkserverId() int32 {
	if m != nil {
		return m.ChunkserverId
	}
	return 0
}

func (m *RegisterResponse) GetNamespaceVersion() int64 {
	if m != nil {
		return m.NamespaceVersion
	}
	return 0
}

func (m *RegisterResponse) GetReportInterval() int32 {
	if m != nil {
		return m.ReportInterval
	}
	return 0
}

func (m *RegisterResponse) GetReportSize() int32 {
	if m != nil {
		return m.ReportSize
	}
	return 0
}

func (m *RegisterResponse) GetReportId() int64 {
	if m != nil {
		return m.ReportId
	}
	return 0
}

type BlockReportRequest struct {
	SequenceId           int64              `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChunkserverId        int32              `protobuf:"varint,2,opt,name=chunkserver_id,json=chunkserverId" json:"chunkserver_id,omitempty"`
	ChunkserverAddr      string             `protobuf:"bytes,3,opt,name=chunkserver_addr,json=chunkserverAddr" json:"chunkserver_addr,omitempty"`
	Start                int64              `protobuf:"varint,4,opt,name=start" json:"start,omitempty"`
	End                  int64              `protobuf:"varint,5,opt,name=end" json:"end,omitempty"`
	Blocks               []*ReportBlockInfo `protobuf:"bytes,6,rep,name=blocks" json:"blocks,omitempty"`
	ReportId             int64              `protobuf:"varint,7,opt,name=report_id,json=reportId" json:"report_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BlockReportRequest) Reset()         { *m = BlockReportRequest{} }
func (m *BlockReportRequest) String() string { return proto.CompactTextString(m) }
func (*BlockReportRequest) ProtoMessage()    {}
func (*BlockReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{30}
}
func (m *BlockReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReportRequest.Unmarshal(m, b)
}
func (m *BlockReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReportRequest.Marshal(b, m, deterministic)
}
func (dst *BlockReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReportRequest.Merge(dst, src)
}
func (m *BlockReportRequest) XXX_Size() int {
	return xxx_messageInfo_BlockReportRequest.Size(m)
}
func (m *BlockReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReportRequest proto.InternalMessageInfo

func (m *BlockReportRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *BlockReportRequest) GetChunkserverId() int32 {
	if m != nil {
		return m.ChunkserverId
	}
	return 0
}

func (m *BlockReportRequest) GetChunkserverAddr() string {
	if m != nil {
		return m.ChunkserverAddr
	}
	return ""
}

func (m *BlockReportRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *BlockReportRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *BlockReportRequest) GetBlocks() []*ReportBlockInfo {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *BlockReportRequest) GetReportId() int64 {
	if m != nil {
		return m.ReportId
	}
	return 0
}

type BlockReportResponse struct {
	SequenceId           int64          `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode     `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	ObsoleteBlocks       []int64        `protobuf:"varint,3,rep,packed,name=obsolete_blocks,json=obsoleteBlocks" json:"obsolete_blocks,omitempty"`
	CloseBlocks          []int64        `protobuf:"varint,4,rep,packed,name=close_blocks,json=closeBlocks" json:"close_blocks,omitempty"`
	NewReplicas          []*ReplicaInfo `protobuf:"bytes,5,rep,name=new_replicas,json=newReplicas" json:"new_replicas,omitempty"`
	ReportId             int64          `protobuf:"varint,6,opt,name=report_id,json=reportId" json:"report_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BlockReportResponse) Reset()         { *m = BlockReportResponse{} }
func (m *BlockReportResponse) String() string { return proto.CompactTextString(m) }
func (*BlockReportResponse) ProtoMessage()    {}
func (*BlockReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{31}
}
func (m *BlockReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReportResponse.Unmarshal(m, b)
}
func (m *BlockReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReportResponse.Marshal(b, m, deterministic)
}
func (dst *BlockReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReportResponse.Merge(dst, src)
}
func (m *BlockReportResponse) XXX_Size() int {
	return xxx_messageInfo_BlockReportResponse.Size(m)
}
func (m *BlockReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReportResponse proto.InternalMessageInfo

func (m *BlockReportResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *BlockReportResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *BlockReportResponse) GetObsoleteBlocks() []int64 {
	if m != nil {
		return m.ObsoleteBlocks
	}
	return nil
}

func (m *BlockReportResponse) GetCloseBlocks() []int64 {
	if m != nil {
		return m.CloseBlocks
	}
	return nil
}

func (m *BlockReportResponse) GetNewReplicas() []*ReplicaInfo {
	if m != nil {
		return m.NewReplicas
	}
	return nil
}

func (m *BlockReportResponse) GetReportId() int64 {
	if m != nil {
		return m.ReportId
	}
	return 0
}

type BlockReceivedRequest struct {
	SequenceId           int64              `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChunkserverId        int32              `protobuf:"varint,2,opt,name=chunkserver_id,json=chunkserverId" json:"chunkserver_id,omitempty"`
	ChunkserverAddr      string             `protobuf:"bytes,3,opt,name=chunkserver_addr,json=chunkserverAddr" json:"chunkserver_addr,omitempty"`
	Blocks               []*ReportBlockInfo `protobuf:"bytes,6,rep,name=blocks" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BlockReceivedRequest) Reset()         { *m = BlockReceivedRequest{} }
func (m *BlockReceivedRequest) String() string { return proto.CompactTextString(m) }
func (*BlockReceivedRequest) ProtoMessage()    {}
func (*BlockReceivedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{32}
}
func (m *BlockReceivedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReceivedRequest.Unmarshal(m, b)
}
func (m *BlockReceivedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReceivedRequest.Marshal(b, m, deterministic)
}
func (dst *BlockReceivedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReceivedRequest.Merge(dst, src)
}
func (m *BlockReceivedRequest) XXX_Size() int {
	return xxx_messageInfo_BlockReceivedRequest.Size(m)
}
func (m *BlockReceivedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReceivedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReceivedRequest proto.InternalMessageInfo

func (m *BlockReceivedRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *BlockReceivedRequest) GetChunkserverId() int32 {
	if m != nil {
		return m.ChunkserverId
	}
	return 0
}

func (m *BlockReceivedRequest) GetChunkserverAddr() string {
	if m != nil {
		return m.ChunkserverAddr
	}
	return ""
}

func (m *BlockReceivedRequest) GetBlocks() []*ReportBlockInfo {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type BlockReceivedResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BlockReceivedResponse) Reset()         { *m = BlockReceivedResponse{} }
func (m *BlockReceivedResponse) String() string { return proto.CompactTextString(m) }
func (*BlockReceivedResponse) ProtoMessage()    {}
func (*BlockReceivedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{33}
}
func (m *BlockReceivedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockReceivedResponse.Unmarshal(m, b)
}
func (m *BlockReceivedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockReceivedResponse.Marshal(b, m, deterministic)
}
func (dst *BlockReceivedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockReceivedResponse.Merge(dst, src)
}
func (m *BlockReceivedResponse) XXX_Size() int {
	return xxx_messageInfo_BlockReceivedResponse.Size(m)
}
func (m *BlockReceivedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockReceivedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockReceivedResponse proto.InternalMessageInfo

func (m *BlockReceivedResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *BlockReceivedResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type PushBlockReportRequest struct {
	SequenceId           int64        `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChunkserverId        int32        `protobuf:"varint,2,opt,name=chunkserver_id,json=chunkserverId" json:"chunkserver_id,omitempty"`
	Blocks               []int64      `protobuf:"varint,3,rep,packed,name=blocks" json:"blocks,omitempty"`
	Status               []StatusCode `protobuf:"varint,4,rep,packed,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PushBlockReportRequest) Reset()         { *m = PushBlockReportRequest{} }
func (m *PushBlockReportRequest) String() string { return proto.CompactTextString(m) }
func (*PushBlockReportRequest) ProtoMessage()    {}
func (*PushBlockReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{34}
}
func (m *PushBlockReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBlockReportRequest.Unmarshal(m, b)
}
func (m *PushBlockReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBlockReportRequest.Marshal(b, m, deterministic)
}
func (dst *PushBlockReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBlockReportRequest.Merge(dst, src)
}
func (m *PushBlockReportRequest) XXX_Size() int {
	return xxx_messageInfo_PushBlockReportRequest.Size(m)
}
func (m *PushBlockReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBlockReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushBlockReportRequest proto.InternalMessageInfo

func (m *PushBlockReportRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *PushBlockReportRequest) GetChunkserverId() int32 {
	if m != nil {
		return m.ChunkserverId
	}
	return 0
}

func (m *PushBlockReportRequest) GetBlocks() []int64 {
	if m != nil {
		return m.Blocks
	}
	return nil
}

func (m *PushBlockReportRequest) GetStatus() []StatusCode {
	if m != nil {
		return m.Status
	}
	return nil
}

type PushBlockReportResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PushBlockReportResponse) Reset()         { *m = PushBlockReportResponse{} }
func (m *PushBlockReportResponse) String() string { return proto.CompactTextString(m) }
func (*PushBlockReportResponse) ProtoMessage()    {}
func (*PushBlockReportResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{35}
}
func (m *PushBlockReportResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushBlockReportResponse.Unmarshal(m, b)
}
func (m *PushBlockReportResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushBlockReportResponse.Marshal(b, m, deterministic)
}
func (dst *PushBlockReportResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushBlockReportResponse.Merge(dst, src)
}
func (m *PushBlockReportResponse) XXX_Size() int {
	return xxx_messageInfo_PushBlockReportResponse.Size(m)
}
func (m *PushBlockReportResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PushBlockReportResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PushBlockReportResponse proto.InternalMessageInfo

func (m *PushBlockReportResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *PushBlockReportResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type SysStatRequest struct {
	StatName             string   `protobuf:"bytes,2,opt,name=stat_name,json=statName" json:"stat_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SysStatRequest) Reset()         { *m = SysStatRequest{} }
func (m *SysStatRequest) String() string { return proto.CompactTextString(m) }
func (*SysStatRequest) ProtoMessage()    {}
func (*SysStatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{36}
}
func (m *SysStatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysStatRequest.Unmarshal(m, b)
}
func (m *SysStatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysStatRequest.Marshal(b, m, deterministic)
}
func (dst *SysStatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysStatRequest.Merge(dst, src)
}
func (m *SysStatRequest) XXX_Size() int {
	return xxx_messageInfo_SysStatRequest.Size(m)
}
func (m *SysStatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SysStatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SysStatRequest proto.InternalMessageInfo

func (m *SysStatRequest) GetStatName() string {
	if m != nil {
		return m.StatName
	}
	return ""
}

type SysStatResponse struct {
	Status               StatusCode         `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	Chunkservers         []*ChunkServerInfo `protobuf:"bytes,3,rep,name=chunkservers" json:"chunkservers,omitempty"`
	BlockNum             int64              `protobuf:"varint,4,opt,name=block_num,json=blockNum" json:"block_num,omitempty"`
	DataSize             int64              `protobuf:"varint,5,opt,name=data_size,json=dataSize" json:"data_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SysStatResponse) Reset()         { *m = SysStatResponse{} }
func (m *SysStatResponse) String() string { return proto.CompactTextString(m) }
func (*SysStatResponse) ProtoMessage()    {}
func (*SysStatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{37}
}
func (m *SysStatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysStatResponse.Unmarshal(m, b)
}
func (m *SysStatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysStatResponse.Marshal(b, m, deterministic)
}
func (dst *SysStatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysStatResponse.Merge(dst, src)
}
func (m *SysStatResponse) XXX_Size() int {
	return xxx_messageInfo_SysStatResponse.Size(m)
}
func (m *SysStatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SysStatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SysStatResponse proto.InternalMessageInfo

func (m *SysStatResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *SysStatResponse) GetChunkservers() []*ChunkServerInfo {
	if m != nil {
		return m.Chunkservers
	}
	return nil
}

func (m *SysStatResponse) GetBlockNum() int64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *SysStatResponse) GetDataSize() int64 {
	if m != nil {
		return m.DataSize
	}
	return 0
}

type NsLogEntry struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Key                  []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NsLogEntry) Reset()         { *m = NsLogEntry{} }
func (m *NsLogEntry) String() string { return proto.CompactTextString(m) }
func (*NsLogEntry) ProtoMessage()    {}
func (*NsLogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{38}
}
func (m *NsLogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NsLogEntry.Unmarshal(m, b)
}
func (m *NsLogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NsLogEntry.Marshal(b, m, deterministic)
}
func (dst *NsLogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NsLogEntry.Merge(dst, src)
}
func (m *NsLogEntry) XXX_Size() int {
	return xxx_messageInfo_NsLogEntry.Size(m)
}
func (m *NsLogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_NsLogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_NsLogEntry proto.InternalMessageInfo

func (m *NsLogEntry) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *NsLogEntry) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *NsLogEntry) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type NameServerLog struct {
	Entries              []*NsLogEntry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NameServerLog) Reset()         { *m = NameServerLog{} }
func (m *NameServerLog) String() string { return proto.CompactTextString(m) }
func (*NameServerLog) ProtoMessage()    {}
func (*NameServerLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{39}
}
func (m *NameServerLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameServerLog.Unmarshal(m, b)
}
func (m *NameServerLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameServerLog.Marshal(b, m, deterministic)
}
func (dst *NameServerLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameServerLog.Merge(dst, src)
}
func (m *NameServerLog) XXX_Size() int {
	return xxx_messageInfo_NameServerLog.Size(m)
}
func (m *NameServerLog) XXX_DiscardUnknown() {
	xxx_messageInfo_NameServerLog.DiscardUnknown(m)
}

var xxx_messageInfo_NameServerLog proto.InternalMessageInfo

func (m *NameServerLog) GetEntries() []*NsLogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type ShutdownChunkServerRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	ChunkserverAddress   []string `protobuf:"bytes,2,rep,name=chunkserver_address,json=chunkserverAddress" json:"chunkserver_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownChunkServerRequest) Reset()         { *m = ShutdownChunkServerRequest{} }
func (m *ShutdownChunkServerRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownChunkServerRequest) ProtoMessage()    {}
func (*ShutdownChunkServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{40}
}
func (m *ShutdownChunkServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownChunkServerRequest.Unmarshal(m, b)
}
func (m *ShutdownChunkServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownChunkServerRequest.Marshal(b, m, deterministic)
}
func (dst *ShutdownChunkServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownChunkServerRequest.Merge(dst, src)
}
func (m *ShutdownChunkServerRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownChunkServerRequest.Size(m)
}
func (m *ShutdownChunkServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownChunkServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownChunkServerRequest proto.InternalMessageInfo

func (m *ShutdownChunkServerRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ShutdownChunkServerRequest) GetChunkserverAddress() []string {
	if m != nil {
		return m.ChunkserverAddress
	}
	return nil
}

type ShutdownChunkServerResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ShutdownChunkServerResponse) Reset()         { *m = ShutdownChunkServerResponse{} }
func (m *ShutdownChunkServerResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownChunkServerResponse) ProtoMessage()    {}
func (*ShutdownChunkServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{41}
}
func (m *ShutdownChunkServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownChunkServerResponse.Unmarshal(m, b)
}
func (m *ShutdownChunkServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownChunkServerResponse.Marshal(b, m, deterministic)
}
func (dst *ShutdownChunkServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownChunkServerResponse.Merge(dst, src)
}
func (m *ShutdownChunkServerResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownChunkServerResponse.Size(m)
}
func (m *ShutdownChunkServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownChunkServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownChunkServerResponse proto.InternalMessageInfo

func (m *ShutdownChunkServerResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ShutdownChunkServerResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type ShutdownChunkServerStatRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShutdownChunkServerStatRequest) Reset()         { *m = ShutdownChunkServerStatRequest{} }
func (m *ShutdownChunkServerStatRequest) String() string { return proto.CompactTextString(m) }
func (*ShutdownChunkServerStatRequest) ProtoMessage()    {}
func (*ShutdownChunkServerStatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{42}
}
func (m *ShutdownChunkServerStatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownChunkServerStatRequest.Unmarshal(m, b)
}
func (m *ShutdownChunkServerStatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownChunkServerStatRequest.Marshal(b, m, deterministic)
}
func (dst *ShutdownChunkServerStatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownChunkServerStatRequest.Merge(dst, src)
}
func (m *ShutdownChunkServerStatRequest) XXX_Size() int {
	return xxx_messageInfo_ShutdownChunkServerStatRequest.Size(m)
}
func (m *ShutdownChunkServerStatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownChunkServerStatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownChunkServerStatRequest proto.InternalMessageInfo

func (m *ShutdownChunkServerStatRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

type ShutdownChunkServerStatResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	InOfflineProgress    bool       `protobuf:"varint,3,opt,name=in_offline_progress,json=inOfflineProgress" json:"in_offline_progress,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ShutdownChunkServerStatResponse) Reset()         { *m = ShutdownChunkServerStatResponse{} }
func (m *ShutdownChunkServerStatResponse) String() string { return proto.CompactTextString(m) }
func (*ShutdownChunkServerStatResponse) ProtoMessage()    {}
func (*ShutdownChunkServerStatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{43}
}
func (m *ShutdownChunkServerStatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShutdownChunkServerStatResponse.Unmarshal(m, b)
}
func (m *ShutdownChunkServerStatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShutdownChunkServerStatResponse.Marshal(b, m, deterministic)
}
func (dst *ShutdownChunkServerStatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShutdownChunkServerStatResponse.Merge(dst, src)
}
func (m *ShutdownChunkServerStatResponse) XXX_Size() int {
	return xxx_messageInfo_ShutdownChunkServerStatResponse.Size(m)
}
func (m *ShutdownChunkServerStatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShutdownChunkServerStatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShutdownChunkServerStatResponse proto.InternalMessageInfo

func (m *ShutdownChunkServerStatResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ShutdownChunkServerStatResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *ShutdownChunkServerStatResponse) GetInOfflineProgress() bool {
	if m != nil {
		return m.InOfflineProgress
	}
	return false
}

type DiskUsageRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskUsageRequest) Reset()         { *m = DiskUsageRequest{} }
func (m *DiskUsageRequest) String() string { return proto.CompactTextString(m) }
func (*DiskUsageRequest) ProtoMessage()    {}
func (*DiskUsageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{44}
}
func (m *DiskUsageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskUsageRequest.Unmarshal(m, b)
}
func (m *DiskUsageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskUsageRequest.Marshal(b, m, deterministic)
}
func (dst *DiskUsageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskUsageRequest.Merge(dst, src)
}
func (m *DiskUsageRequest) XXX_Size() int {
	return xxx_messageInfo_DiskUsageRequest.Size(m)
}
func (m *DiskUsageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskUsageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskUsageRequest proto.InternalMessageInfo

func (m *DiskUsageRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *DiskUsageRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type DiskUsageResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	DuSize               uint64     `protobuf:"varint,3,opt,name=du_size,json=duSize" json:"du_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DiskUsageResponse) Reset()         { *m = DiskUsageResponse{} }
func (m *DiskUsageResponse) String() string { return proto.CompactTextString(m) }
func (*DiskUsageResponse) ProtoMessage()    {}
func (*DiskUsageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{45}
}
func (m *DiskUsageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskUsageResponse.Unmarshal(m, b)
}
func (m *DiskUsageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskUsageResponse.Marshal(b, m, deterministic)
}
func (dst *DiskUsageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskUsageResponse.Merge(dst, src)
}
func (m *DiskUsageResponse) XXX_Size() int {
	return xxx_messageInfo_DiskUsageResponse.Size(m)
}
func (m *DiskUsageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskUsageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiskUsageResponse proto.InternalMessageInfo

func (m *DiskUsageResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *DiskUsageResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func (m *DiskUsageResponse) GetDuSize() uint64 {
	if m != nil {
		return m.DuSize
	}
	return 0
}

type ChmodRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Mode                 int32    `protobuf:"varint,2,opt,name=mode" json:"mode,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChmodRequest) Reset()         { *m = ChmodRequest{} }
func (m *ChmodRequest) String() string { return proto.CompactTextString(m) }
func (*ChmodRequest) ProtoMessage()    {}
func (*ChmodRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{46}
}
func (m *ChmodRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChmodRequest.Unmarshal(m, b)
}
func (m *ChmodRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChmodRequest.Marshal(b, m, deterministic)
}
func (dst *ChmodRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChmodRequest.Merge(dst, src)
}
func (m *ChmodRequest) XXX_Size() int {
	return xxx_messageInfo_ChmodRequest.Size(m)
}
func (m *ChmodRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChmodRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChmodRequest proto.InternalMessageInfo

func (m *ChmodRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ChmodRequest) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *ChmodRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ChmodResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ChmodResponse) Reset()         { *m = ChmodResponse{} }
func (m *ChmodResponse) String() string { return proto.CompactTextString(m) }
func (*ChmodResponse) ProtoMessage()    {}
func (*ChmodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{47}
}
func (m *ChmodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChmodResponse.Unmarshal(m, b)
}
func (m *ChmodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChmodResponse.Marshal(b, m, deterministic)
}
func (dst *ChmodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChmodResponse.Merge(dst, src)
}
func (m *ChmodResponse) XXX_Size() int {
	return xxx_messageInfo_ChmodResponse.Size(m)
}
func (m *ChmodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChmodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChmodResponse proto.InternalMessageInfo

func (m *ChmodResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *ChmodResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type SymlinkRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Src                  string   `protobuf:"bytes,2,opt,name=src" json:"src,omitempty"`
	Dst                  string   `protobuf:"bytes,3,opt,name=dst" json:"dst,omitempty"`
	User                 string   `protobuf:"bytes,4,opt,name=user" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SymlinkRequest) Reset()         { *m = SymlinkRequest{} }
func (m *SymlinkRequest) String() string { return proto.CompactTextString(m) }
func (*SymlinkRequest) ProtoMessage()    {}
func (*SymlinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{48}
}
func (m *SymlinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymlinkRequest.Unmarshal(m, b)
}
func (m *SymlinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymlinkRequest.Marshal(b, m, deterministic)
}
func (dst *SymlinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymlinkRequest.Merge(dst, src)
}
func (m *SymlinkRequest) XXX_Size() int {
	return xxx_messageInfo_SymlinkRequest.Size(m)
}
func (m *SymlinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SymlinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SymlinkRequest proto.InternalMessageInfo

func (m *SymlinkRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *SymlinkRequest) GetSrc() string {
	if m != nil {
		return m.Src
	}
	return ""
}

func (m *SymlinkRequest) GetDst() string {
	if m != nil {
		return m.Dst
	}
	return ""
}

func (m *SymlinkRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type SymlinkResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SymlinkResponse) Reset()         { *m = SymlinkResponse{} }
func (m *SymlinkResponse) String() string { return proto.CompactTextString(m) }
func (*SymlinkResponse) ProtoMessage()    {}
func (*SymlinkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{49}
}
func (m *SymlinkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SymlinkResponse.Unmarshal(m, b)
}
func (m *SymlinkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SymlinkResponse.Marshal(b, m, deterministic)
}
func (dst *SymlinkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SymlinkResponse.Merge(dst, src)
}
func (m *SymlinkResponse) XXX_Size() int {
	return xxx_messageInfo_SymlinkResponse.Size(m)
}
func (m *SymlinkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SymlinkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SymlinkResponse proto.InternalMessageInfo

func (m *SymlinkResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *SymlinkResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type LockDirRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	DirPath              string   `protobuf:"bytes,2,opt,name=dir_path,json=dirPath" json:"dir_path,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockDirRequest) Reset()         { *m = LockDirRequest{} }
func (m *LockDirRequest) String() string { return proto.CompactTextString(m) }
func (*LockDirRequest) ProtoMessage()    {}
func (*LockDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{50}
}
func (m *LockDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockDirRequest.Unmarshal(m, b)
}
func (m *LockDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockDirRequest.Marshal(b, m, deterministic)
}
func (dst *LockDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockDirRequest.Merge(dst, src)
}
func (m *LockDirRequest) XXX_Size() int {
	return xxx_messageInfo_LockDirRequest.Size(m)
}
func (m *LockDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockDirRequest proto.InternalMessageInfo

func (m *LockDirRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *LockDirRequest) GetDirPath() string {
	if m != nil {
		return m.DirPath
	}
	return ""
}

func (m *LockDirRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type LockDirResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LockDirResponse) Reset()         { *m = LockDirResponse{} }
func (m *LockDirResponse) String() string { return proto.CompactTextString(m) }
func (*LockDirResponse) ProtoMessage()    {}
func (*LockDirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{51}
}
func (m *LockDirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockDirResponse.Unmarshal(m, b)
}
func (m *LockDirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockDirResponse.Marshal(b, m, deterministic)
}
func (dst *LockDirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockDirResponse.Merge(dst, src)
}
func (m *LockDirResponse) XXX_Size() int {
	return xxx_messageInfo_LockDirResponse.Size(m)
}
func (m *LockDirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockDirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockDirResponse proto.InternalMessageInfo

func (m *LockDirResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *LockDirResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

type UnlockDirRequest struct {
	SequenceId           int64    `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	DirPath              string   `protobuf:"bytes,2,opt,name=dir_path,json=dirPath" json:"dir_path,omitempty"`
	Uuid                 string   `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockDirRequest) Reset()         { *m = UnlockDirRequest{} }
func (m *UnlockDirRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockDirRequest) ProtoMessage()    {}
func (*UnlockDirRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{52}
}
func (m *UnlockDirRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockDirRequest.Unmarshal(m, b)
}
func (m *UnlockDirRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockDirRequest.Marshal(b, m, deterministic)
}
func (dst *UnlockDirRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockDirRequest.Merge(dst, src)
}
func (m *UnlockDirRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockDirRequest.Size(m)
}
func (m *UnlockDirRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockDirRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockDirRequest proto.InternalMessageInfo

func (m *UnlockDirRequest) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *UnlockDirRequest) GetDirPath() string {
	if m != nil {
		return m.DirPath
	}
	return ""
}

func (m *UnlockDirRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type UnlockDirResponse struct {
	SequenceId           int64      `protobuf:"varint,1,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	Status               StatusCode `protobuf:"varint,2,opt,name=status,enum=mineFs.proto.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UnlockDirResponse) Reset()         { *m = UnlockDirResponse{} }
func (m *UnlockDirResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockDirResponse) ProtoMessage()    {}
func (*UnlockDirResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nameserver_0f044578ed8bfe4c, []int{53}
}
func (m *UnlockDirResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockDirResponse.Unmarshal(m, b)
}
func (m *UnlockDirResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockDirResponse.Marshal(b, m, deterministic)
}
func (dst *UnlockDirResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockDirResponse.Merge(dst, src)
}
func (m *UnlockDirResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockDirResponse.Size(m)
}
func (m *UnlockDirResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockDirResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockDirResponse proto.InternalMessageInfo

func (m *UnlockDirResponse) GetSequenceId() int64 {
	if m != nil {
		return m.SequenceId
	}
	return 0
}

func (m *UnlockDirResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_kOK
}

func init() {
	proto.RegisterType((*ChunkServerInfo)(nil), "mineFs.proto.ChunkServerInfo")
	proto.RegisterType((*CreateFileRequest)(nil), "mineFs.proto.CreateFileRequest")
	proto.RegisterType((*CreateFileResponse)(nil), "mineFs.proto.CreateFileResponse")
	proto.RegisterType((*LocatedBlock)(nil), "mineFs.proto.LocatedBlock")
	proto.RegisterType((*FileLocationRequest)(nil), "mineFs.proto.FileLocationRequest")
	proto.RegisterType((*FileLocationResponse)(nil), "mineFs.proto.FileLocationResponse")
	proto.RegisterType((*ListDirectoryRequest)(nil), "mineFs.proto.ListDirectoryRequest")
	proto.RegisterType((*ListDirectoryResponse)(nil), "mineFs.proto.ListDirectoryResponse")
	proto.RegisterType((*StatRequest)(nil), "mineFs.proto.StatRequest")
	proto.RegisterType((*StatResponse)(nil), "mineFs.proto.StatResponse")
	proto.RegisterType((*RenameRequest)(nil), "mineFs.proto.RenameRequest")
	proto.RegisterType((*RenameResponse)(nil), "mineFs.proto.RenameResponse")
	proto.RegisterType((*AddBlockRequest)(nil), "mineFs.proto.AddBlockRequest")
	proto.RegisterType((*AddBlockResponse)(nil), "mineFs.proto.AddBlockResponse")
	proto.RegisterType((*SyncBlockRequest)(nil), "mineFs.proto.SyncBlockRequest")
	proto.RegisterType((*SyncBlockResponse)(nil), "mineFs.proto.SyncBlockResponse")
	proto.RegisterType((*FinishBlockRequest)(nil), "mineFs.proto.FinishBlockRequest")
	proto.RegisterType((*FinishBlockResponse)(nil), "mineFs.proto.FinishBlockResponse")
	proto.RegisterType((*UnlinkRequest)(nil), "mineFs.proto.UnlinkRequest")
	proto.RegisterType((*UnlinkResponse)(nil), "mineFs.proto.UnlinkResponse")
	proto.RegisterType((*DeleteDirectoryRequest)(nil), "mineFs.proto.DeleteDirectoryRequest")
	proto.RegisterType((*DeleteDirectoryResponse)(nil), "mineFs.proto.DeleteDirectoryResponse")
	proto.RegisterType((*ChangeReplicaNumRequest)(nil), "mineFs.proto.ChangeReplicaNumRequest")
	proto.RegisterType((*ChangeReplicaNumResponse)(nil), "mineFs.proto.ChangeReplicaNumResponse")
	proto.RegisterType((*HeartBeatRequest)(nil), "mineFs.proto.HeartBeatRequest")
	proto.RegisterType((*HeartBeatResponse)(nil), "mineFs.proto.HeartBeatResponse")
	proto.RegisterType((*ReportBlockInfo)(nil), "mineFs.proto.ReportBlockInfo")
	proto.RegisterType((*ReplicaInfo)(nil), "mineFs.proto.ReplicaInfo")
	proto.RegisterType((*RegisterRequest)(nil), "mineFs.proto.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "mineFs.proto.RegisterResponse")
	proto.RegisterType((*BlockReportRequest)(nil), "mineFs.proto.BlockReportRequest")
	proto.RegisterType((*BlockReportResponse)(nil), "mineFs.proto.BlockReportResponse")
	proto.RegisterType((*BlockReceivedRequest)(nil), "mineFs.proto.BlockReceivedRequest")
	proto.RegisterType((*BlockReceivedResponse)(nil), "mineFs.proto.BlockReceivedResponse")
	proto.RegisterType((*PushBlockReportRequest)(nil), "mineFs.proto.PushBlockReportRequest")
	proto.RegisterType((*PushBlockReportResponse)(nil), "mineFs.proto.PushBlockReportResponse")
	proto.RegisterType((*SysStatRequest)(nil), "mineFs.proto.SysStatRequest")
	proto.RegisterType((*SysStatResponse)(nil), "mineFs.proto.SysStatResponse")
	proto.RegisterType((*NsLogEntry)(nil), "mineFs.proto.NsLogEntry")
	proto.RegisterType((*NameServerLog)(nil), "mineFs.proto.NameServerLog")
	proto.RegisterType((*ShutdownChunkServerRequest)(nil), "mineFs.proto.ShutdownChunkServerRequest")
	proto.RegisterType((*ShutdownChunkServerResponse)(nil), "mineFs.proto.ShutdownChunkServerResponse")
	proto.RegisterType((*ShutdownChunkServerStatRequest)(nil), "mineFs.proto.ShutdownChunkServerStatRequest")
	proto.RegisterType((*ShutdownChunkServerStatResponse)(nil), "mineFs.proto.ShutdownChunkServerStatResponse")
	proto.RegisterType((*DiskUsageRequest)(nil), "mineFs.proto.DiskUsageRequest")
	proto.RegisterType((*DiskUsageResponse)(nil), "mineFs.proto.DiskUsageResponse")
	proto.RegisterType((*ChmodRequest)(nil), "mineFs.proto.ChmodRequest")
	proto.RegisterType((*ChmodResponse)(nil), "mineFs.proto.ChmodResponse")
	proto.RegisterType((*SymlinkRequest)(nil), "mineFs.proto.SymlinkRequest")
	proto.RegisterType((*SymlinkResponse)(nil), "mineFs.proto.SymlinkResponse")
	proto.RegisterType((*LockDirRequest)(nil), "mineFs.proto.LockDirRequest")
	proto.RegisterType((*LockDirResponse)(nil), "mineFs.proto.LockDirResponse")
	proto.RegisterType((*UnlockDirRequest)(nil), "mineFs.proto.UnlockDirRequest")
	proto.RegisterType((*UnlockDirResponse)(nil), "mineFs.proto.UnlockDirResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NameServerClient is the client API for NameServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NameServerClient interface {
	CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*CreateFileResponse, error)
	AddBlock(ctx context.Context, in *AddBlockRequest, opts ...grpc.CallOption) (*AddBlockResponse, error)
	GetFileLocation(ctx context.Context, in *FileLocationRequest, opts ...grpc.CallOption) (*FileLocationResponse, error)
	ListDirectory(ctx context.Context, in *ListDirectoryRequest, opts ...grpc.CallOption) (*ListDirectoryResponse, error)
	Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error)
	Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error)
	SyncBlock(ctx context.Context, in *SyncBlockRequest, opts ...grpc.CallOption) (*SyncBlockResponse, error)
	FinishBlock(ctx context.Context, in *FinishBlockRequest, opts ...grpc.CallOption) (*FinishBlockResponse, error)
	Unlink(ctx context.Context, in *UnlinkRequest, opts ...grpc.CallOption) (*UnlinkResponse, error)
	DeleteDirectory(ctx context.Context, in *DeleteDirectoryRequest, opts ...grpc.CallOption) (*DeleteDirectoryResponse, error)
	ChangeReplicaNum(ctx context.Context, in *ChangeReplicaNumRequest, opts ...grpc.CallOption) (*ChangeReplicaNumResponse, error)
	ShutdownChunkServer(ctx context.Context, in *ShutdownChunkServerRequest, opts ...grpc.CallOption) (*ShutdownChunkServerResponse, error)
	ShutdownChunkServerStat(ctx context.Context, in *ShutdownChunkServerStatRequest, opts ...grpc.CallOption) (*ShutdownChunkServerStatResponse, error)
	DiskUsage(ctx context.Context, in *DiskUsageRequest, opts ...grpc.CallOption) (*DiskUsageResponse, error)
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	HeartBeat(ctx context.Context, in *HeartBeatRequest, opts ...grpc.CallOption) (*HeartBeatResponse, error)
	BlockReport(ctx context.Context, in *BlockReportRequest, opts ...grpc.CallOption) (*BlockReportResponse, error)
	BlockReceived(ctx context.Context, in *BlockReceivedRequest, opts ...grpc.CallOption) (*BlockReceivedResponse, error)
	PushBlockReport(ctx context.Context, in *PushBlockReportRequest, opts ...grpc.CallOption) (*PushBlockReportResponse, error)
	SysStat(ctx context.Context, in *SysStatRequest, opts ...grpc.CallOption) (*SysStatResponse, error)
	Chmod(ctx context.Context, in *ChmodRequest, opts ...grpc.CallOption) (*ChmodResponse, error)
	Symlink(ctx context.Context, in *SymlinkRequest, opts ...grpc.CallOption) (*SymlinkResponse, error)
	LockDir(ctx context.Context, in *LockDirRequest, opts ...grpc.CallOption) (*LockDirResponse, error)
	UnlockDir(ctx context.Context, in *UnlockDirRequest, opts ...grpc.CallOption) (*UnlockDirResponse, error)
}

type nameServerClient struct {
	cc *grpc.ClientConn
}

func NewNameServerClient(cc *grpc.ClientConn) NameServerClient {
	return &nameServerClient{cc}
}

func (c *nameServerClient) CreateFile(ctx context.Context, in *CreateFileRequest, opts ...grpc.CallOption) (*CreateFileResponse, error) {
	out := new(CreateFileResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/CreateFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) AddBlock(ctx context.Context, in *AddBlockRequest, opts ...grpc.CallOption) (*AddBlockResponse, error) {
	out := new(AddBlockResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/AddBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) GetFileLocation(ctx context.Context, in *FileLocationRequest, opts ...grpc.CallOption) (*FileLocationResponse, error) {
	out := new(FileLocationResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/GetFileLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) ListDirectory(ctx context.Context, in *ListDirectoryRequest, opts ...grpc.CallOption) (*ListDirectoryResponse, error) {
	out := new(ListDirectoryResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/ListDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error) {
	out := new(StatResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) Rename(ctx context.Context, in *RenameRequest, opts ...grpc.CallOption) (*RenameResponse, error) {
	out := new(RenameResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/Rename", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) SyncBlock(ctx context.Context, in *SyncBlockRequest, opts ...grpc.CallOption) (*SyncBlockResponse, error) {
	out := new(SyncBlockResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/SyncBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) FinishBlock(ctx context.Context, in *FinishBlockRequest, opts ...grpc.CallOption) (*FinishBlockResponse, error) {
	out := new(FinishBlockResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/FinishBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) Unlink(ctx context.Context, in *UnlinkRequest, opts ...grpc.CallOption) (*UnlinkResponse, error) {
	out := new(UnlinkResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/Unlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) DeleteDirectory(ctx context.Context, in *DeleteDirectoryRequest, opts ...grpc.CallOption) (*DeleteDirectoryResponse, error) {
	out := new(DeleteDirectoryResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/DeleteDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) ChangeReplicaNum(ctx context.Context, in *ChangeReplicaNumRequest, opts ...grpc.CallOption) (*ChangeReplicaNumResponse, error) {
	out := new(ChangeReplicaNumResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/ChangeReplicaNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) ShutdownChunkServer(ctx context.Context, in *ShutdownChunkServerRequest, opts ...grpc.CallOption) (*ShutdownChunkServerResponse, error) {
	out := new(ShutdownChunkServerResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/ShutdownChunkServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) ShutdownChunkServerStat(ctx context.Context, in *ShutdownChunkServerStatRequest, opts ...grpc.CallOption) (*ShutdownChunkServerStatResponse, error) {
	out := new(ShutdownChunkServerStatResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/ShutdownChunkServerStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) DiskUsage(ctx context.Context, in *DiskUsageRequest, opts ...grpc.CallOption) (*DiskUsageResponse, error) {
	out := new(DiskUsageResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/DiskUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) HeartBeat(ctx context.Context, in *HeartBeatRequest, opts ...grpc.CallOption) (*HeartBeatResponse, error) {
	out := new(HeartBeatResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/HeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) BlockReport(ctx context.Context, in *BlockReportRequest, opts ...grpc.CallOption) (*BlockReportResponse, error) {
	out := new(BlockReportResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/BlockReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) BlockReceived(ctx context.Context, in *BlockReceivedRequest, opts ...grpc.CallOption) (*BlockReceivedResponse, error) {
	out := new(BlockReceivedResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/BlockReceived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) PushBlockReport(ctx context.Context, in *PushBlockReportRequest, opts ...grpc.CallOption) (*PushBlockReportResponse, error) {
	out := new(PushBlockReportResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/PushBlockReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) SysStat(ctx context.Context, in *SysStatRequest, opts ...grpc.CallOption) (*SysStatResponse, error) {
	out := new(SysStatResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/SysStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) Chmod(ctx context.Context, in *ChmodRequest, opts ...grpc.CallOption) (*ChmodResponse, error) {
	out := new(ChmodResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/Chmod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) Symlink(ctx context.Context, in *SymlinkRequest, opts ...grpc.CallOption) (*SymlinkResponse, error) {
	out := new(SymlinkResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/Symlink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) LockDir(ctx context.Context, in *LockDirRequest, opts ...grpc.CallOption) (*LockDirResponse, error) {
	out := new(LockDirResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/LockDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nameServerClient) UnlockDir(ctx context.Context, in *UnlockDirRequest, opts ...grpc.CallOption) (*UnlockDirResponse, error) {
	out := new(UnlockDirResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.NameServer/UnlockDir", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for NameServer service

type NameServerServer interface {
	CreateFile(context.Context, *CreateFileRequest) (*CreateFileResponse, error)
	AddBlock(context.Context, *AddBlockRequest) (*AddBlockResponse, error)
	GetFileLocation(context.Context, *FileLocationRequest) (*FileLocationResponse, error)
	ListDirectory(context.Context, *ListDirectoryRequest) (*ListDirectoryResponse, error)
	Stat(context.Context, *StatRequest) (*StatResponse, error)
	Rename(context.Context, *RenameRequest) (*RenameResponse, error)
	SyncBlock(context.Context, *SyncBlockRequest) (*SyncBlockResponse, error)
	FinishBlock(context.Context, *FinishBlockRequest) (*FinishBlockResponse, error)
	Unlink(context.Context, *UnlinkRequest) (*UnlinkResponse, error)
	DeleteDirectory(context.Context, *DeleteDirectoryRequest) (*DeleteDirectoryResponse, error)
	ChangeReplicaNum(context.Context, *ChangeReplicaNumRequest) (*ChangeReplicaNumResponse, error)
	ShutdownChunkServer(context.Context, *ShutdownChunkServerRequest) (*ShutdownChunkServerResponse, error)
	ShutdownChunkServerStat(context.Context, *ShutdownChunkServerStatRequest) (*ShutdownChunkServerStatResponse, error)
	DiskUsage(context.Context, *DiskUsageRequest) (*DiskUsageResponse, error)
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	HeartBeat(context.Context, *HeartBeatRequest) (*HeartBeatResponse, error)
	BlockReport(context.Context, *BlockReportRequest) (*BlockReportResponse, error)
	BlockReceived(context.Context, *BlockReceivedRequest) (*BlockReceivedResponse, error)
	PushBlockReport(context.Context, *PushBlockReportRequest) (*PushBlockReportResponse, error)
	SysStat(context.Context, *SysStatRequest) (*SysStatResponse, error)
	Chmod(context.Context, *ChmodRequest) (*ChmodResponse, error)
	Symlink(context.Context, *SymlinkRequest) (*SymlinkResponse, error)
	LockDir(context.Context, *LockDirRequest) (*LockDirResponse, error)
	UnlockDir(context.Context, *UnlockDirRequest) (*UnlockDirResponse, error)
}

func RegisterNameServerServer(s *grpc.Server, srv NameServerServer) {
	s.RegisterService(&_NameServer_serviceDesc, srv)
}

func _NameServer_CreateFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).CreateFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/CreateFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).CreateFile(ctx, req.(*CreateFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_AddBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).AddBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/AddBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).AddBlock(ctx, req.(*AddBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_GetFileLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).GetFileLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/GetFileLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).GetFileLocation(ctx, req.(*FileLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_ListDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).ListDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/ListDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).ListDirectory(ctx, req.(*ListDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).Stat(ctx, req.(*StatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_Rename_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).Rename(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/Rename",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).Rename(ctx, req.(*RenameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_SyncBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).SyncBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/SyncBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).SyncBlock(ctx, req.(*SyncBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_FinishBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishBlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).FinishBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/FinishBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).FinishBlock(ctx, req.(*FinishBlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_Unlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).Unlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/Unlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).Unlink(ctx, req.(*UnlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_DeleteDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).DeleteDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/DeleteDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).DeleteDirectory(ctx, req.(*DeleteDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_ChangeReplicaNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeReplicaNumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).ChangeReplicaNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/ChangeReplicaNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).ChangeReplicaNum(ctx, req.(*ChangeReplicaNumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_ShutdownChunkServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownChunkServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).ShutdownChunkServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/ShutdownChunkServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).ShutdownChunkServer(ctx, req.(*ShutdownChunkServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_ShutdownChunkServerStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShutdownChunkServerStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).ShutdownChunkServerStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/ShutdownChunkServerStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).ShutdownChunkServerStat(ctx, req.(*ShutdownChunkServerStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_DiskUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskUsageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).DiskUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/DiskUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).DiskUsage(ctx, req.(*DiskUsageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_HeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HeartBeatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).HeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/HeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).HeartBeat(ctx, req.(*HeartBeatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_BlockReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).BlockReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/BlockReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).BlockReport(ctx, req.(*BlockReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_BlockReceived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockReceivedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).BlockReceived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/BlockReceived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).BlockReceived(ctx, req.(*BlockReceivedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_PushBlockReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushBlockReportRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).PushBlockReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/PushBlockReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).PushBlockReport(ctx, req.(*PushBlockReportRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_SysStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysStatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).SysStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/SysStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).SysStat(ctx, req.(*SysStatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_Chmod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChmodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).Chmod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/Chmod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).Chmod(ctx, req.(*ChmodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_Symlink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SymlinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).Symlink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/Symlink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).Symlink(ctx, req.(*SymlinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_LockDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).LockDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/LockDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).LockDir(ctx, req.(*LockDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NameServer_UnlockDir_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockDirRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NameServerServer).UnlockDir(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.NameServer/UnlockDir",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NameServerServer).UnlockDir(ctx, req.(*UnlockDirRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NameServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mineFs.proto.NameServer",
	HandlerType: (*NameServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateFile",
			Handler:    _NameServer_CreateFile_Handler,
		},
		{
			MethodName: "AddBlock",
			Handler:    _NameServer_AddBlock_Handler,
		},
		{
			MethodName: "GetFileLocation",
			Handler:    _NameServer_GetFileLocation_Handler,
		},
		{
			MethodName: "ListDirectory",
			Handler:    _NameServer_ListDirectory_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _NameServer_Stat_Handler,
		},
		{
			MethodName: "Rename",
			Handler:    _NameServer_Rename_Handler,
		},
		{
			MethodName: "SyncBlock",
			Handler:    _NameServer_SyncBlock_Handler,
		},
		{
			MethodName: "FinishBlock",
			Handler:    _NameServer_FinishBlock_Handler,
		},
		{
			MethodName: "Unlink",
			Handler:    _NameServer_Unlink_Handler,
		},
		{
			MethodName: "DeleteDirectory",
			Handler:    _NameServer_DeleteDirectory_Handler,
		},
		{
			MethodName: "ChangeReplicaNum",
			Handler:    _NameServer_ChangeReplicaNum_Handler,
		},
		{
			MethodName: "ShutdownChunkServer",
			Handler:    _NameServer_ShutdownChunkServer_Handler,
		},
		{
			MethodName: "ShutdownChunkServerStat",
			Handler:    _NameServer_ShutdownChunkServerStat_Handler,
		},
		{
			MethodName: "DiskUsage",
			Handler:    _NameServer_DiskUsage_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _NameServer_Register_Handler,
		},
		{
			MethodName: "HeartBeat",
			Handler:    _NameServer_HeartBeat_Handler,
		},
		{
			MethodName: "BlockReport",
			Handler:    _NameServer_BlockReport_Handler,
		},
		{
			MethodName: "BlockReceived",
			Handler:    _NameServer_BlockReceived_Handler,
		},
		{
			MethodName: "PushBlockReport",
			Handler:    _NameServer_PushBlockReport_Handler,
		},
		{
			MethodName: "SysStat",
			Handler:    _NameServer_SysStat_Handler,
		},
		{
			MethodName: "Chmod",
			Handler:    _NameServer_Chmod_Handler,
		},
		{
			MethodName: "Symlink",
			Handler:    _NameServer_Symlink_Handler,
		},
		{
			MethodName: "LockDir",
			Handler:    _NameServer_LockDir_Handler,
		},
		{
			MethodName: "UnlockDir",
			Handler:    _NameServer_UnlockDir_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nameserver.proto",
}

func init() { proto.RegisterFile("nameserver.proto", fileDescriptor_nameserver_0f044578ed8bfe4c) }

var fileDescriptor_nameserver_0f044578ed8bfe4c = []byte{
	// 2397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x19, 0x4d, 0x73, 0xdb, 0xc6,
	0x75, 0x40, 0xf0, 0xf3, 0x89, 0x5f, 0x5a, 0xc9, 0x12, 0x4c, 0xf9, 0x43, 0x86, 0xeb, 0x5a, 0x99,
	0x26, 0xae, 0xc7, 0x99, 0x4c, 0x2f, 0xed, 0x4c, 0x6d, 0x29, 0x4e, 0x34, 0xd5, 0x38, 0x0e, 0x14,
	0x37, 0x39, 0x05, 0x85, 0x80, 0xa5, 0xb8, 0x21, 0x09, 0xd0, 0x58, 0x50, 0xac, 0x7c, 0xc9, 0xa1,
	0xbd, 0xe7, 0xd6, 0xf6, 0xd0, 0x76, 0x7a, 0xe8, 0xa9, 0xa7, 0xde, 0x7b, 0xe9, 0xbd, 0xa7, 0x9e,
	0xfb, 0x2b, 0xfa, 0x0f, 0x3a, 0xfb, 0x01, 0x10, 0x58, 0x82, 0x32, 0x59, 0x0b, 0x93, 0xdb, 0xee,
	0xdb, 0x87, 0xb7, 0xef, 0x1b, 0xef, 0xbd, 0x85, 0xae, 0xef, 0x8c, 0x31, 0xc5, 0xe1, 0x05, 0x0e,
	0x1f, 0x4d, 0xc2, 0x20, 0x0a, 0x50, 0x73, 0x4c, 0x7c, 0xfc, 0x9c, 0x8a, 0x5d, 0x0f, 0xfa, 0x64,
	0x84, 0xe5, 0x7a, 0x93, 0x46, 0x4e, 0x34, 0xa5, 0xb6, 0x1b, 0x78, 0x12, 0x64, 0x7e, 0x57, 0x85,
	0xce, 0xe1, 0x60, 0xea, 0x0f, 0x4f, 0x39, 0x89, 0x63, 0xbf, 0x1f, 0xa0, 0x36, 0x94, 0x88, 0x67,
	0x68, 0xfb, 0xda, 0x41, 0xc5, 0x2a, 0x11, 0x0f, 0x19, 0x50, 0x73, 0x3c, 0x2f, 0xc4, 0x94, 0x1a,
	0xa5, 0x7d, 0xed, 0xa0, 0x61, 0xc5, 0x5b, 0x74, 0x0b, 0x1a, 0x64, 0x12, 0x9f, 0x21, 0x7e, 0x36,
	0x07, 0xa0, 0xdb, 0x00, 0x34, 0x72, 0xc2, 0xc8, 0x8e, 0xc8, 0x18, 0x1b, 0x9b, 0xe2, 0x98, 0x43,
	0xbe, 0x20, 0x63, 0x8c, 0x1e, 0x40, 0x7b, 0xe4, 0xd0, 0xc8, 0x1e, 0x60, 0x27, 0x8c, 0xce, 0xb0,
	0x13, 0x19, 0x3a, 0xbf, 0xb2, 0xc5, 0xa0, 0x9f, 0xc6, 0x40, 0xb4, 0x07, 0x0d, 0xcf, 0x89, 0x1c,
	0x9b, 0x92, 0x37, 0xd8, 0x28, 0xef, 0x6b, 0x07, 0xba, 0x55, 0x67, 0x80, 0x53, 0xf2, 0x06, 0xb3,
	0x2b, 0x3c, 0x42, 0x87, 0xf6, 0xeb, 0x69, 0x10, 0x39, 0x46, 0x85, 0x9f, 0x36, 0x18, 0xe4, 0x73,
	0x06, 0x60, 0xdf, 0x9e, 0x8d, 0x02, 0x77, 0x68, 0xfb, 0xd3, 0xb1, 0x51, 0xe3, 0xd4, 0xeb, 0x1c,
	0xf0, 0x62, 0x3a, 0x46, 0xbb, 0x50, 0x23, 0xd4, 0xf6, 0xb0, 0xe3, 0x19, 0xf5, 0x7d, 0xed, 0xa0,
	0x6e, 0x55, 0x09, 0x3d, 0xc2, 0x8e, 0x87, 0x7e, 0x02, 0x55, 0xa1, 0x28, 0xa3, 0xb1, 0xaf, 0x1d,
	0xb4, 0x9f, 0xdc, 0x7d, 0x94, 0xd6, 0xe8, 0xa3, 0x94, 0xba, 0x4e, 0x39, 0x9a, 0x25, 0xd1, 0xb9,
	0xe2, 0x26, 0x06, 0x48, 0xc5, 0x4d, 0x98, 0xe2, 0xce, 0xa6, 0xfd, 0x3e, 0x0e, 0xa9, 0xb1, 0xc1,
	0x81, 0xf1, 0x16, 0xdd, 0x85, 0x8d, 0x09, 0xf6, 0x3d, 0xe2, 0x9f, 0xdb, 0x67, 0xd3, 0xbe, 0x71,
	0x8b, 0x9f, 0x82, 0x04, 0x3d, 0x9b, 0xf6, 0xd1, 0x43, 0xe8, 0xc4, 0x08, 0x21, 0x76, 0x83, 0x0b,
	0x1c, 0x1a, 0xb7, 0x39, 0x52, 0x5b, 0x82, 0x2d, 0x01, 0x45, 0x08, 0xca, 0x43, 0xe2, 0x0e, 0x8d,
	0x26, 0x17, 0x81, 0xaf, 0x19, 0xec, 0x4d, 0xe0, 0x63, 0xa3, 0xc5, 0x55, 0xce, 0xd7, 0xe8, 0x0e,
	0x00, 0xd3, 0x9a, 0x8b, 0xfd, 0x08, 0x87, 0x46, 0x9b, 0x9f, 0xa4, 0x20, 0xec, 0x9b, 0xd0, 0x71,
	0x87, 0x46, 0x47, 0x7c, 0xc3, 0xd6, 0xa8, 0x0b, 0x7a, 0xe4, 0x9c, 0x1b, 0x5d, 0x0e, 0x62, 0x4b,
	0x86, 0x35, 0x0a, 0x1c, 0xcf, 0xd8, 0xde, 0xd7, 0x0e, 0x34, 0x8b, 0xaf, 0xd1, 0x16, 0x54, 0x66,
	0xf6, 0xeb, 0x09, 0x35, 0x6e, 0x70, 0x06, 0xcb, 0xb3, 0xcf, 0x27, 0x94, 0x29, 0x77, 0x66, 0xd3,
	0x09, 0xc6, 0x9e, 0xb1, 0xc3, 0xad, 0x52, 0x9d, 0x9d, 0xb2, 0x1d, 0xc3, 0x0e, 0x39, 0xf6, 0xae,
	0xc0, 0x0e, 0x25, 0x76, 0x28, 0xb1, 0x0d, 0x81, 0x1d, 0x0a, 0xec, 0x87, 0xd0, 0x99, 0x85, 0x24,
	0x92, 0x7a, 0xe2, 0x9a, 0xbc, 0xc9, 0x11, 0xda, 0x12, 0xfc, 0x4c, 0x2a, 0xf4, 0x3e, 0xb4, 0x1c,
	0x37, 0x22, 0x17, 0xd8, 0xe6, 0xf6, 0xa5, 0x46, 0x8f, 0xa3, 0x35, 0x05, 0xf0, 0x19, 0x87, 0x31,
	0x24, 0xa9, 0x4c, 0x79, 0xd9, 0x9e, 0x40, 0x92, 0x40, 0x7e, 0xa5, 0xf9, 0x77, 0x0d, 0x36, 0x0f,
	0x43, 0xec, 0x44, 0xf8, 0x39, 0x19, 0x61, 0x0b, 0xbf, 0x9e, 0x62, 0x1a, 0x31, 0x83, 0x51, 0xb6,
	0xf4, 0x5d, 0x6c, 0xcb, 0xe0, 0xd0, 0x2d, 0x88, 0x41, 0xc7, 0x1e, 0x73, 0x35, 0x16, 0x69, 0x36,
	0x0b, 0x47, 0x19, 0x26, 0x75, 0x06, 0x78, 0xe1, 0x8c, 0x31, 0x53, 0xdb, 0x38, 0xf0, 0xb0, 0x74,
	0x70, 0xbe, 0x46, 0xdb, 0x50, 0xe9, 0x8f, 0x9c, 0x73, 0xca, 0x7d, 0xba, 0x62, 0x89, 0x0d, 0xbb,
	0x27, 0xc4, 0x93, 0x11, 0x71, 0x1d, 0xee, 0xb3, 0x15, 0xe1, 0x18, 0x12, 0xc4, 0xbc, 0x16, 0x41,
	0x79, 0x4a, 0x71, 0xc8, 0xbd, 0xb9, 0x61, 0xf1, 0xb5, 0x79, 0x0e, 0x28, 0xcd, 0x31, 0x9d, 0x04,
	0x3e, 0xc5, 0x6f, 0x67, 0xf9, 0x71, 0xe2, 0xe7, 0x25, 0xee, 0xe7, 0x46, 0xd6, 0xcf, 0x85, 0x73,
	0x1f, 0x06, 0x1e, 0x8e, 0x1d, 0xdc, 0xfc, 0xbd, 0x06, 0xcd, 0x93, 0xc0, 0x75, 0x22, 0xec, 0x71,
	0x95, 0xa2, 0x9b, 0x20, 0xe2, 0x69, 0x7e, 0x41, 0x8d, 0xef, 0x8f, 0x3d, 0x16, 0x9a, 0xe2, 0x88,
	0x07, 0x6e, 0x49, 0x84, 0x26, 0x87, 0xf0, 0xc8, 0xfd, 0x08, 0xaa, 0xee, 0xc0, 0x21, 0x3e, 0x35,
	0xf4, 0x7d, 0xfd, 0x60, 0xe3, 0xc9, 0xed, 0xa5, 0x41, 0xc6, 0x72, 0x92, 0x25, 0x91, 0xd1, 0x4e,
	0xc2, 0xb3, 0x50, 0x5b, 0xcc, 0xd9, 0x1f, 0x35, 0xd8, 0x62, 0xd2, 0x73, 0xee, 0x48, 0xe0, 0x5f,
	0x8f, 0xdd, 0x76, 0xa0, 0x1a, 0xf4, 0xfb, 0x14, 0x8b, 0xd4, 0xa4, 0x5b, 0x72, 0x97, 0xcd, 0x2b,
	0x65, 0x25, 0xaf, 0xc4, 0x16, 0xaa, 0xa4, 0x2c, 0xf4, 0x27, 0x0d, 0xb6, 0xb3, 0xec, 0x15, 0x66,
	0x24, 0xf4, 0x04, 0xaa, 0x32, 0x06, 0x84, 0x66, 0x7b, 0xd9, 0x2f, 0xd2, 0xf6, 0xb3, 0x24, 0xa6,
	0xf9, 0x0b, 0xd8, 0x3e, 0x21, 0x34, 0x3a, 0x22, 0x21, 0x76, 0xa3, 0x20, 0xbc, 0x5c, 0x59, 0x7d,
	0x08, 0xca, 0x13, 0x27, 0x1a, 0x48, 0xcd, 0xf1, 0xb5, 0xf9, 0x07, 0x0d, 0x6e, 0x28, 0xd4, 0x8a,
	0x93, 0xf6, 0x7d, 0xa8, 0x30, 0x73, 0xc5, 0xc2, 0xee, 0x64, 0x3f, 0x60, 0x3a, 0xe7, 0xfe, 0x23,
	0x90, 0xcc, 0x67, 0xb0, 0xc1, 0x68, 0xbc, 0x93, 0x78, 0xbf, 0xd3, 0xa0, 0x29, 0x88, 0x14, 0x27,
	0xd5, 0x87, 0xd2, 0x2b, 0x89, 0xdf, 0x0f, 0xb8, 0xef, 0x2d, 0x97, 0x8c, 0x7b, 0x2b, 0x5b, 0x99,
	0x1e, 0xb4, 0x2c, 0xcc, 0xfc, 0x78, 0x65, 0xf1, 0x0c, 0xa8, 0x05, 0x23, 0x2f, 0x25, 0x61, 0xbc,
	0x65, 0x27, 0x3e, 0x9e, 0xf1, 0x13, 0x5d, 0x9c, 0xc8, 0xad, 0xe9, 0x42, 0x3b, 0xbe, 0xa5, 0xb8,
	0x44, 0x73, 0x01, 0x9d, 0xa7, 0x9e, 0xf4, 0xd1, 0x6b, 0x89, 0xe4, 0x07, 0xd0, 0x76, 0x47, 0x04,
	0xfb, 0x91, 0x1d, 0x97, 0x2b, 0x42, 0xac, 0x96, 0x80, 0x3e, 0x15, 0x40, 0x96, 0xe0, 0xba, 0xf3,
	0x8b, 0x8b, 0xb3, 0xef, 0x63, 0xa8, 0xf0, 0xc8, 0x93, 0xb6, 0xbd, 0x2a, 0x44, 0x05, 0xa2, 0xf9,
	0x2d, 0x74, 0x4f, 0x2f, 0x7d, 0x77, 0x3d, 0x95, 0xa4, 0xd3, 0x73, 0x29, 0x9b, 0x9e, 0x33, 0xda,
	0xd2, 0x17, 0xff, 0x57, 0xa9, 0x72, 0x8b, 0xaf, 0xcd, 0x3e, 0x6c, 0xa6, 0x18, 0x28, 0xce, 0xf4,
	0xff, 0xd1, 0x00, 0x3d, 0x27, 0x3e, 0xa1, 0x83, 0x6b, 0x93, 0xf5, 0x3e, 0xb4, 0xc4, 0xd1, 0x05,
	0x0e, 0x29, 0x09, 0x7c, 0x99, 0xcd, 0x9b, 0x1c, 0xf8, 0x4b, 0x01, 0xcb, 0x2a, 0xa4, 0xac, 0x28,
	0x24, 0xfb, 0x33, 0xab, 0xa8, 0x3f, 0xb3, 0x03, 0xe8, 0xba, 0xa3, 0x80, 0x62, 0x7b, 0x46, 0xa2,
	0x81, 0x8d, 0xc3, 0x30, 0x08, 0x8d, 0x2a, 0x2f, 0xc8, 0xda, 0x1c, 0xfe, 0x25, 0x89, 0x06, 0x1f,
	0x33, 0xa8, 0x39, 0x60, 0xbf, 0xa9, 0x94, 0x70, 0xc5, 0xe9, 0xf1, 0x08, 0x5a, 0xaf, 0xfc, 0x11,
	0xf1, 0x87, 0xef, 0x94, 0xec, 0x5c, 0x68, 0xc7, 0x54, 0x8a, 0x63, 0x75, 0x08, 0x3b, 0x47, 0x78,
	0x84, 0x23, 0x7c, 0x2d, 0xff, 0x1f, 0xd6, 0x95, 0x84, 0xd8, 0x9d, 0x86, 0x94, 0x5c, 0x08, 0xd7,
	0xae, 0x5b, 0x73, 0x80, 0x39, 0x82, 0xdd, 0x85, 0xcb, 0x8a, 0x13, 0xed, 0xd7, 0xb0, 0x7b, 0x38,
	0x70, 0xfc, 0x73, 0x6c, 0x25, 0x25, 0xdc, 0xf5, 0x24, 0x34, 0xa5, 0x50, 0xd4, 0xd5, 0x42, 0xd1,
	0x1c, 0x83, 0xb1, 0x78, 0x73, 0x71, 0x82, 0xfe, 0x5b, 0x87, 0x2e, 0x6f, 0xda, 0x9e, 0xe1, 0x35,
	0xfe, 0xaf, 0xef, 0x41, 0xd7, 0x65, 0x95, 0x9e, 0x68, 0x60, 0x79, 0x6e, 0x96, 0x92, 0x76, 0x52,
	0x70, 0x96, 0x9d, 0x79, 0x06, 0x4f, 0xa1, 0x12, 0x2f, 0x6e, 0x17, 0x53, 0xd0, 0x63, 0x0f, 0xfd,
	0x08, 0x36, 0x79, 0x47, 0x3c, 0x71, 0x5c, 0x9c, 0xc4, 0xbb, 0xc8, 0x63, 0xdd, 0xe4, 0x20, 0x15,
	0xf3, 0xf3, 0x3a, 0xae, 0xa2, 0xd4, 0x71, 0x99, 0xc6, 0xb3, 0xaa, 0x34, 0x9e, 0xa9, 0xd6, 0xae,
	0x76, 0x65, 0x6b, 0xd7, 0x5a, 0xa5, 0xb5, 0x6b, 0xe7, 0xb6, 0x76, 0x49, 0x63, 0x55, 0xcf, 0x6f,
	0xac, 0x1a, 0xf9, 0x8d, 0x15, 0xe4, 0x37, 0x56, 0x1b, 0x99, 0xc6, 0x6a, 0xa1, 0x15, 0x6a, 0xe6,
	0xb4, 0x42, 0xff, 0xd5, 0x60, 0x33, 0x65, 0xd3, 0xe2, 0x7e, 0x87, 0xb9, 0x46, 0xd3, 0x97, 0x18,
	0x2d, 0xee, 0x78, 0xcb, 0xa9, 0x8e, 0xf7, 0x21, 0x74, 0x42, 0x3c, 0x09, 0xc2, 0xc8, 0x26, 0xac,
	0x9b, 0xbd, 0x70, 0x46, 0xd2, 0x9c, 0x6d, 0x01, 0x3e, 0x96, 0x50, 0x19, 0x36, 0x0c, 0x31, 0x31,
	0xab, 0x08, 0x9b, 0x20, 0x8c, 0x98, 0x61, 0xcd, 0xdf, 0x6a, 0xd0, 0xb1, 0xf8, 0x96, 0x67, 0x68,
	0x3e, 0x10, 0xb9, 0xa2, 0xcb, 0x31, 0xa0, 0x16, 0xf3, 0x2b, 0x7f, 0x3a, 0x72, 0xab, 0xfc, 0x32,
	0x74, 0xf5, 0x97, 0x71, 0x1b, 0x80, 0xd0, 0xc4, 0x01, 0x84, 0x2c, 0x0d, 0x42, 0xa5, 0xed, 0xcd,
	0x3f, 0x6b, 0xb0, 0x21, 0x03, 0xf7, 0x6d, 0x2c, 0xfc, 0x18, 0xb6, 0xd4, 0x18, 0x12, 0xa3, 0x1a,
	0xfd, 0xa0, 0x61, 0x21, 0x25, 0x8c, 0x30, 0xa5, 0xa8, 0x07, 0xf5, 0x49, 0x48, 0x82, 0x90, 0x44,
	0x97, 0x5c, 0x4b, 0x75, 0x2b, 0xd9, 0x0b, 0x45, 0x0a, 0xbf, 0x88, 0xc8, 0x18, 0x07, 0xd3, 0x48,
	0xea, 0xa8, 0x2d, 0xc1, 0x5f, 0x08, 0xa8, 0xf9, 0x0f, 0xae, 0xa7, 0x73, 0x42, 0x23, 0x1c, 0xbe,
	0x53, 0xb8, 0xeb, 0xf9, 0xe1, 0xbe, 0x56, 0x1c, 0xcb, 0x41, 0x45, 0x65, 0x3e, 0xa8, 0xc8, 0x0e,
	0x86, 0x6a, 0xca, 0x60, 0xc8, 0xfc, 0x4b, 0x09, 0xba, 0x73, 0xee, 0x8b, 0x73, 0xec, 0xc5, 0xa4,
	0x55, 0x59, 0x39, 0x69, 0x55, 0x97, 0x08, 0x9b, 0xe3, 0xeb, 0xb5, 0x55, 0x7c, 0xbd, 0xae, 0xfa,
	0x3a, 0xcb, 0x70, 0x31, 0xa5, 0x38, 0x9b, 0xd4, 0x25, 0x0d, 0xcf, 0xfc, 0x4d, 0x09, 0x90, 0x2c,
	0x52, 0x18, 0x64, 0x65, 0x1b, 0x2f, 0x8a, 0x5c, 0xca, 0x13, 0x79, 0x0d, 0x57, 0xd8, 0x86, 0x0a,
	0x9f, 0x1a, 0x4a, 0xf3, 0x8b, 0x0d, 0xb3, 0x39, 0xf6, 0x3d, 0x59, 0x8b, 0xb1, 0x25, 0xfa, 0x28,
	0x69, 0x7c, 0xab, 0x79, 0x23, 0x05, 0x25, 0xaa, 0xe3, 0xde, 0x37, 0xab, 0x85, 0x9a, 0xa2, 0x85,
	0xef, 0x4a, 0xb0, 0x95, 0xd1, 0x42, 0x71, 0xbe, 0xf2, 0x10, 0x3a, 0xc1, 0x19, 0x0d, 0x58, 0x69,
	0x62, 0xa7, 0x1a, 0x78, 0xdd, 0x6a, 0xc7, 0x60, 0x39, 0xc6, 0xba, 0x07, 0x4d, 0x51, 0x6d, 0x4a,
	0xac, 0x32, 0xc7, 0xda, 0xe0, 0x30, 0x89, 0xf2, 0x53, 0x68, 0xfa, 0x78, 0x66, 0xcb, 0x72, 0x80,
	0x1a, 0x15, 0xae, 0x90, 0x9b, 0x0b, 0x0a, 0x89, 0xf3, 0x8b, 0xb5, 0xe1, 0xe3, 0x99, 0xdc, 0x2b,
	0x1a, 0xa9, 0x2a, 0x1a, 0xf9, 0xa7, 0x06, 0xdb, 0x52, 0x23, 0x2e, 0x26, 0x17, 0xd8, 0xfb, 0x1e,
	0x3d, 0xe3, 0xff, 0xb3, 0xb8, 0xf9, 0x0d, 0xdc, 0x50, 0x24, 0x28, 0xae, 0x2e, 0xfa, 0x9b, 0x06,
	0x3b, 0x2f, 0xa7, 0x49, 0xbd, 0x5f, 0x44, 0x28, 0xed, 0x64, 0x06, 0x3e, 0x7a, 0xe2, 0xd8, 0x8f,
	0x53, 0xb3, 0x32, 0x7d, 0x25, 0x66, 0x47, 0xb0, 0xbb, 0xc0, 0x6b, 0x71, 0xaa, 0xf9, 0x00, 0xda,
	0xa7, 0x97, 0x34, 0x3d, 0x8f, 0xd9, 0x83, 0x06, 0x3b, 0xcb, 0x54, 0xbc, 0x0c, 0xc0, 0x2a, 0x5e,
	0xe6, 0x78, 0x9d, 0x04, 0x5f, 0x72, 0xb5, 0x7e, 0x94, 0x3d, 0x85, 0x66, 0x4a, 0x7b, 0x2b, 0x4e,
	0x1f, 0x33, 0x9f, 0x2c, 0x4e, 0xff, 0xf4, 0x65, 0x55, 0x63, 0x25, 0x5b, 0x35, 0x9a, 0x9f, 0x02,
	0xbc, 0xa0, 0x27, 0xc1, 0xf9, 0xc7, 0x7e, 0x14, 0x5e, 0xb2, 0x42, 0x26, 0xba, 0x9c, 0x60, 0xf9,
	0xd2, 0xc2, 0xd7, 0x2c, 0xab, 0x0d, 0xf1, 0x25, 0x97, 0xa6, 0x69, 0xb1, 0x25, 0xcb, 0x7e, 0x17,
	0xce, 0x68, 0x2a, 0x4a, 0x88, 0xa6, 0x25, 0x36, 0xe6, 0x21, 0xb4, 0x98, 0x52, 0x04, 0x8f, 0x27,
	0xc1, 0x39, 0x7a, 0x02, 0x35, 0xec, 0x47, 0x21, 0xc1, 0xd4, 0xd0, 0xb8, 0x48, 0x8a, 0x2a, 0xe6,
	0xf7, 0x5a, 0x31, 0xa2, 0xe9, 0x43, 0xef, 0x74, 0x30, 0x8d, 0xbc, 0x60, 0xe6, 0xa7, 0x24, 0x5e,
	0xd9, 0x3d, 0xd7, 0x2d, 0x3c, 0xcc, 0x09, 0xec, 0xe5, 0xde, 0x57, 0x9c, 0x8b, 0x3d, 0x85, 0x3b,
	0x39, 0x37, 0xae, 0x33, 0x02, 0x34, 0xff, 0xaa, 0xc1, 0xdd, 0xa5, 0x34, 0x8a, 0xfb, 0x1b, 0x3c,
	0x82, 0x2d, 0xe2, 0xdb, 0x41, 0xbf, 0x3f, 0x22, 0x3e, 0xb6, 0x27, 0x61, 0x70, 0x9e, 0x4c, 0xad,
	0xea, 0xd6, 0x26, 0xf1, 0x3f, 0x13, 0x27, 0x2f, 0xe5, 0x81, 0xf9, 0x09, 0x74, 0x8f, 0x08, 0x1d,
	0xbe, 0xa2, 0xce, 0x39, 0x7e, 0xa7, 0x8e, 0xff, 0x5b, 0xd8, 0x4c, 0x11, 0x2a, 0x4e, 0xc0, 0x5d,
	0xa8, 0x79, 0xd3, 0x79, 0x71, 0x5c, 0xb6, 0xaa, 0xde, 0x94, 0x07, 0xc9, 0x97, 0xd0, 0x3c, 0x1c,
	0x8c, 0x03, 0x6f, 0x1d, 0x29, 0xf8, 0xeb, 0x4a, 0x29, 0xf5, 0xba, 0x12, 0x4b, 0xa6, 0xa7, 0x24,
	0x3b, 0x83, 0x96, 0x24, 0x5c, 0x9c, 0xc3, 0x11, 0x96, 0xd3, 0xc6, 0x6b, 0x8d, 0x5d, 0xba, 0xa0,
	0xd3, 0xd0, 0x95, 0x36, 0x60, 0x4b, 0x06, 0xf1, 0x68, 0x24, 0x79, 0x67, 0xcb, 0xe4, 0x4d, 0xa1,
	0x9c, 0x7a, 0x53, 0xf0, 0x58, 0x3a, 0x1c, 0x17, 0x3d, 0x9b, 0xf9, 0x15, 0xb4, 0x4f, 0x02, 0x77,
	0x78, 0x44, 0xc2, 0x75, 0x26, 0x71, 0x1e, 0x09, 0xed, 0xf4, 0x58, 0xd9, 0x23, 0xe1, 0x4b, 0x27,
	0x1a, 0x70, 0x39, 0xa6, 0xb2, 0x75, 0x67, 0x72, 0x4c, 0x89, 0xc7, 0xe4, 0x48, 0x6e, 0x28, 0x4e,
	0x8e, 0x33, 0xe8, 0xbe, 0xf2, 0x47, 0xc5, 0x4a, 0xd2, 0x87, 0xcd, 0xd4, 0x1d, 0x85, 0xc9, 0xf2,
	0xe4, 0x5f, 0x1d, 0x80, 0x79, 0xf6, 0x47, 0x9f, 0x01, 0xcc, 0x9f, 0xff, 0x90, 0xfa, 0x5a, 0xad,
	0x3e, 0x65, 0xf6, 0xf6, 0x97, 0x23, 0x48, 0x96, 0x8f, 0xa1, 0x1e, 0x0f, 0xc1, 0x91, 0xf2, 0x67,
	0x54, 0xa6, 0xf2, 0xbd, 0x3b, 0xcb, 0x8e, 0x25, 0xa9, 0xaf, 0xa0, 0xf3, 0x09, 0x8e, 0xd2, 0x4f,
	0x5f, 0xe8, 0xde, 0xe2, 0x43, 0x86, 0xf2, 0x6a, 0xd7, 0x33, 0xaf, 0x42, 0x49, 0x28, 0xb7, 0x32,
	0x8f, 0x4c, 0x48, 0xf9, 0x28, 0xef, 0x3d, 0xab, 0x77, 0xff, 0x4a, 0x1c, 0x49, 0xf9, 0x67, 0x50,
	0x66, 0x4a, 0x47, 0x37, 0x17, 0x0d, 0x11, 0xd3, 0xe9, 0xe5, 0x1d, 0xc9, 0xcf, 0x0f, 0xa1, 0x2a,
	0x1e, 0x48, 0xd0, 0x9e, 0x5a, 0x8e, 0xa6, 0x1e, 0x67, 0x7a, 0xb7, 0xf2, 0x0f, 0x25, 0x91, 0x13,
	0x68, 0x24, 0xd3, 0x76, 0xa4, 0x28, 0x59, 0x7d, 0x07, 0xe8, 0xdd, 0x5d, 0x7a, 0x2e, 0xa9, 0x59,
	0xb0, 0x91, 0x9a, 0x3a, 0xa3, 0x7d, 0x55, 0xbd, 0xea, 0xb4, 0xbd, 0x77, 0xef, 0x0a, 0x8c, 0xb9,
	0x98, 0x62, 0x32, 0xac, 0x8a, 0x99, 0x99, 0x3a, 0xab, 0x62, 0x2a, 0xc3, 0xe4, 0xaf, 0xa1, 0xa3,
	0x0c, 0x63, 0xd1, 0x0f, 0xb2, 0x1f, 0xe4, 0x0f, 0x86, 0x7b, 0x0f, 0xde, 0x82, 0x25, 0xe9, 0x3b,
	0xd0, 0x55, 0x87, 0xa0, 0xe8, 0x81, 0x5a, 0xeb, 0xe5, 0x8e, 0x67, 0x7b, 0x3f, 0x7c, 0x1b, 0x9a,
	0xbc, 0xe2, 0x1b, 0xd8, 0xca, 0x29, 0x0f, 0xd0, 0x81, 0x62, 0x93, 0xa5, 0x75, 0x56, 0xef, 0xbd,
	0x15, 0x30, 0xe5, 0x5d, 0x17, 0xb0, 0xbb, 0xa4, 0x14, 0x41, 0xef, 0xbf, 0x95, 0x4a, 0xda, 0x7f,
	0x3f, 0x58, 0x11, 0x7b, 0xee, 0x8d, 0x49, 0x4d, 0xa0, 0x7a, 0xa3, 0x5a, 0x75, 0xa8, 0xde, 0xb8,
	0x58, 0x4c, 0x1c, 0x43, 0x3d, 0x9e, 0xbd, 0xa0, 0x85, 0x8e, 0x2d, 0x33, 0x51, 0x52, 0xd3, 0xcb,
	0xc2, 0xc8, 0xe6, 0x04, 0x1a, 0xc9, 0x80, 0x52, 0x65, 0x4c, 0x9d, 0x46, 0xab, 0x8c, 0x2d, 0x4e,
	0x36, 0x2d, 0xd8, 0x48, 0xb5, 0x3e, 0x6a, 0x98, 0x2c, 0x76, 0x70, 0x6a, 0x98, 0xe4, 0xf5, 0x4d,
	0x5f, 0x41, 0x2b, 0xd3, 0x6b, 0xaa, 0x69, 0x2a, 0xaf, 0x95, 0x56, 0xd3, 0x54, 0x7e, 0xb3, 0xfa,
	0x35, 0x74, 0x94, 0x66, 0x4d, 0x8d, 0x9d, 0xfc, 0xbe, 0x53, 0x8d, 0x9d, 0x65, 0x1d, 0xdf, 0x73,
	0xa8, 0xc9, 0x76, 0x0b, 0xdd, 0x52, 0x13, 0x4c, 0xba, 0x6b, 0xeb, 0xdd, 0x5e, 0x72, 0x2a, 0xe9,
	0xfc, 0x1c, 0x2a, 0xbc, 0xec, 0x42, 0x3d, 0x35, 0xa2, 0xe6, 0x45, 0x5e, 0x6f, 0x2f, 0xf7, 0x2c,
	0xcd, 0x09, 0xaf, 0x74, 0x16, 0x39, 0x49, 0xd7, 0x5a, 0x8b, 0x9c, 0x64, 0xcb, 0xa3, 0xe7, 0x50,
	0x93, 0x95, 0x86, 0x4a, 0x27, 0x5b, 0xe2, 0xa8, 0x74, 0xd4, 0xf2, 0xe4, 0x04, 0x1a, 0xc9, 0x7f,
	0x5e, 0xf5, 0x3a, 0xb5, 0xc8, 0x50, 0xbd, 0x6e, 0xa1, 0x40, 0x38, 0xab, 0xf2, 0x83, 0x0f, 0xff,
	0x17, 0x00, 0x00, 0xff, 0xff, 0x45, 0x30, 0x35, 0x96, 0xca, 0x27, 0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: raft.proto

package mineFs_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogType int32

const (
	LogType_kUserLog LogType = 0
	LogType_kRaftCmd LogType = 1
)

var LogType_name = map[int32]string{
	0: "kUserLog",
	1: "kRaftCmd",
}
var LogType_value = map[string]int32{
	"kUserLog": 0,
	"kRaftCmd": 1,
}

func (x LogType) String() string {
	return proto.EnumName(LogType_name, int32(x))
}
func (LogType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_raft_a6e77e714229b4ff, []int{0}
}

type VoteRequest struct {
	Term                 int64    `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Candidate            string   `protobuf:"bytes,3,opt,name=candidate" json:"candidate,omitempty"`
	LastLogIndex         int64    `protobuf:"varint,4,opt,name=last_log_index,json=lastLogIndex" json:"last_log_index,omitempty"`
	LastLogTerm          int64    `protobuf:"varint,5,opt,name=last_log_term,json=lastLogTerm" json:"last_log_term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteRequest) Reset()         { *m = VoteRequest{} }
func (m *VoteRequest) String() string { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()    {}
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_a6e77e714229b4ff, []int{0}
}
func (m *VoteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteRequest.Unmarshal(m, b)
}
func (m *VoteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteRequest.Marshal(b, m, deterministic)
}
func (dst *VoteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteRequest.Merge(dst, src)
}
func (m *VoteRequest) XXX_Size() int {
	return xxx_messageInfo_VoteRequest.Size(m)
}
func (m *VoteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VoteRequest proto.InternalMessageInfo

func (m *VoteRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteRequest) GetCandidate() string {
	if m != nil {
		return m.Candidate
	}
	return ""
}

func (m *VoteRequest) GetLastLogIndex() int64 {
	if m != nil {
		return m.LastLogIndex
	}
	return 0
}

func (m *VoteRequest) GetLastLogTerm() int64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

type VoteResponse struct {
	Term                 int64    `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	VoteGranted          bool     `protobuf:"varint,3,opt,name=vote_granted,json=voteGranted" json:"vote_granted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteResponse) Reset()         { *m = VoteResponse{} }
func (m *VoteResponse) String() string { return proto.CompactTextString(m) }
func (*VoteResponse) ProtoMessage()    {}
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_a6e77e714229b4ff, []int{1}
}
func (m *VoteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteResponse.Unmarshal(m, b)
}
func (m *VoteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteResponse.Marshal(b, m, deterministic)
}
func (dst *VoteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteResponse.Merge(dst, src)
}
func (m *VoteResponse) XXX_Size() int {
	return xxx_messageInfo_VoteResponse.Size(m)
}
func (m *VoteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VoteResponse proto.InternalMessageInfo

func (m *VoteResponse) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *VoteResponse) GetVoteGranted() bool {
	if m != nil {
		return m.VoteGranted
	}
	return false
}

type LogEntry struct {
	Index                int64    `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Term                 int64    `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	LogData              []byte   `protobuf:"bytes,4,opt,name=log_data,json=logData,proto3" json:"log_data,omitempty"`
	Type                 LogType  `protobuf:"varint,5,opt,name=type,enum=mineFs.proto.LogType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_a6e77e714229b4ff, []int{2}
}
func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (dst *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(dst, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *LogEntry) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *LogEntry) GetLogData() []byte {
	if m != nil {
		return m.LogData
	}
	return nil
}

func (m *LogEntry) GetType() LogType {
	if m != nil {
		return m.Type
	}
	return LogType_kUserLog
}

type AppendEntriesRequest struct {
	Term                 int64       `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Leader               string      `protobuf:"bytes,3,opt,name=leader" json:"leader,omitempty"`
	PrevLogIndex         int64       `protobuf:"varint,4,opt,name=prev_log_index,json=prevLogIndex" json:"prev_log_index,omitempty"`
	PrevLogTerm          int64       `protobuf:"varint,5,opt,name=prev_log_term,json=prevLogTerm" json:"prev_log_term,omitempty"`
	Entries              []*LogEntry `protobuf:"bytes,6,rep,name=entries" json:"entries,omitempty"`
	LeaderCommit         int64       `protobuf:"varint,7,opt,name=leader_commit,json=leaderCommit" json:"leader_commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppendEntriesRequest) Reset()         { *m = AppendEntriesRequest{} }
func (m *AppendEntriesRequest) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesRequest) ProtoMessage()    {}
func (*AppendEntriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_a6e77e714229b4ff, []int{3}
}
func (m *AppendEntriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesRequest.Unmarshal(m, b)
}
func (m *AppendEntriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesRequest.Marshal(b, m, deterministic)
}
func (dst *AppendEntriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesRequest.Merge(dst, src)
}
func (m *AppendEntriesRequest) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesRequest.Size(m)
}
func (m *AppendEntriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesRequest proto.InternalMessageInfo

func (m *AppendEntriesRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesRequest) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func (m *AppendEntriesRequest) GetPrevLogIndex() int64 {
	if m != nil {
		return m.PrevLogIndex
	}
	return 0
}

func (m *AppendEntriesRequest) GetPrevLogTerm() int64 {
	if m != nil {
		return m.PrevLogTerm
	}
	return 0
}

func (m *AppendEntriesRequest) GetEntries() []*LogEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AppendEntriesRequest) GetLeaderCommit() int64 {
	if m != nil {
		return m.LeaderCommit
	}
	return 0
}

type AppendEntriesResponse struct {
	Term                 int64    `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Success              bool     `protobuf:"varint,3,opt,name=success" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendEntriesResponse) Reset()         { *m = AppendEntriesResponse{} }
func (m *AppendEntriesResponse) String() string { return proto.CompactTextString(m) }
func (*AppendEntriesResponse) ProtoMessage()    {}
func (*AppendEntriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_raft_a6e77e714229b4ff, []int{4}
}
func (m *AppendEntriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendEntriesResponse.Unmarshal(m, b)
}
func (m *AppendEntriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendEntriesResponse.Marshal(b, m, deterministic)
}
func (dst *AppendEntriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendEntriesResponse.Merge(dst, src)
}
func (m *AppendEntriesResponse) XXX_Size() int {
	return xxx_messageInfo_AppendEntriesResponse.Size(m)
}
func (m *AppendEntriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendEntriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendEntriesResponse proto.InternalMessageInfo

func (m *AppendEntriesResponse) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *AppendEntriesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*VoteRequest)(nil), "mineFs.proto.VoteRequest")
	proto.RegisterType((*VoteResponse)(nil), "mineFs.proto.VoteResponse")
	proto.RegisterType((*LogEntry)(nil), "mineFs.proto.LogEntry")
	proto.RegisterType((*AppendEntriesRequest)(nil), "mineFs.proto.AppendEntriesRequest")
	proto.RegisterType((*AppendEntriesResponse)(nil), "mineFs.proto.AppendEntriesResponse")
	proto.RegisterEnum("mineFs.proto.LogType", LogType_name, LogType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RaftNodeClient is the client API for RaftNode service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RaftNodeClient interface {
	Vote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
	AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error)
}

type raftNodeClient struct {
	cc *grpc.ClientConn
}

func NewRaftNodeClient(cc *grpc.ClientConn) RaftNodeClient {
	return &raftNodeClient{cc}
}

func (c *raftNodeClient) Vote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.RaftNode/Vote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *raftNodeClient) AppendEntries(ctx context.Context, in *AppendEntriesRequest, opts ...grpc.CallOption) (*AppendEntriesResponse, error) {
	out := new(AppendEntriesResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.RaftNode/AppendEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for RaftNode service

type RaftNodeServer interface {
	Vote(context.Context, *VoteRequest) (*VoteResponse, error)
	AppendEntries(context.Context, *AppendEntriesRequest) (*AppendEntriesResponse, error)
}

func RegisterRaftNodeServer(s *grpc.Server, srv RaftNodeServer) {
	s.RegisterService(&_RaftNode_serviceDesc, srv)
}

func _RaftNode_Vote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNodeServer).Vote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.RaftNode/Vote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNodeServer).Vote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RaftNode_AppendEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RaftNodeServer).AppendEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.RaftNode/AppendEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RaftNodeServer).AppendEntries(ctx, req.(*AppendEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RaftNode_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mineFs.proto.RaftNode",
	HandlerType: (*RaftNodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Vote",
			Handler:    _RaftNode_Vote_Handler,
		},
		{
			MethodName: "AppendEntries",
			Handler:    _RaftNode_AppendEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "raft.proto",
}

func init() { proto.RegisterFile("raft.proto", fileDescriptor_raft_a6e77e714229b4ff) }

var fileDescriptor_raft_a6e77e714229b4ff = []byte{
	// 439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x31, 0x49, 0x63, 0x77, 0xec, 0x54, 0xd5, 0xaa, 0xad, 0xdc, 0x88, 0x43, 0x70, 0x41,
	0x0a, 0x1c, 0x22, 0x14, 0xce, 0x1c, 0x50, 0x09, 0x08, 0x29, 0xe2, 0xb0, 0x02, 0xc4, 0xcd, 0x5a,
	0xbc, 0x53, 0xcb, 0xc2, 0xf6, 0x9a, 0xdd, 0x6d, 0x45, 0x78, 0x03, 0x9e, 0x83, 0x47, 0xe3, 0x45,
	0xd0, 0xfe, 0x69, 0x70, 0x48, 0x94, 0x9b, 0xe7, 0xdb, 0xcf, 0xb3, 0xbf, 0xf9, 0x66, 0x01, 0x24,
	0xbb, 0xd1, 0xf3, 0x4e, 0x0a, 0x2d, 0x48, 0xd2, 0x54, 0x2d, 0xbe, 0x55, 0xae, 0xca, 0x7e, 0x05,
	0x10, 0x7f, 0x16, 0x1a, 0x29, 0x7e, 0xbf, 0x45, 0xa5, 0x09, 0x81, 0xa1, 0x46, 0xd9, 0xa4, 0x0f,
	0xa7, 0xc1, 0x6c, 0x40, 0xed, 0x37, 0x79, 0x04, 0xc7, 0x05, 0x6b, 0x79, 0xc5, 0x99, 0xc6, 0x74,
	0x30, 0x0d, 0x66, 0xc7, 0xf4, 0x9f, 0x40, 0x9e, 0xc0, 0x49, 0xcd, 0x94, 0xce, 0x6b, 0x51, 0xe6,
	0x55, 0xcb, 0xf1, 0x47, 0x3a, 0xb4, 0xff, 0x26, 0x46, 0x5d, 0x89, 0xf2, 0xbd, 0xd1, 0x48, 0x06,
	0xe3, 0x8d, 0xcb, 0x5e, 0x70, 0x64, 0x4d, 0xb1, 0x37, 0x7d, 0x44, 0xd9, 0x64, 0x4b, 0x48, 0x1c,
	0x8a, 0xea, 0x44, 0xab, 0x70, 0x2f, 0xcb, 0x63, 0x48, 0xee, 0x84, 0xc6, 0xbc, 0x94, 0xac, 0xd5,
	0xc8, 0x2d, 0x4e, 0x44, 0x63, 0xa3, 0xbd, 0x73, 0x52, 0xf6, 0x13, 0xa2, 0x95, 0x28, 0x97, 0xad,
	0x96, 0x6b, 0x72, 0x06, 0x47, 0x8e, 0xc9, 0xf5, 0x70, 0xc5, 0xa6, 0xf1, 0xa0, 0xd7, 0xf8, 0x12,
	0x22, 0xc3, 0xc6, 0x99, 0x66, 0x76, 0x80, 0x84, 0x86, 0xb5, 0x28, 0xdf, 0x30, 0xcd, 0xc8, 0x33,
	0x18, 0xea, 0x75, 0x87, 0x16, 0xf9, 0x64, 0x71, 0x3e, 0xef, 0x07, 0x38, 0x37, 0xf0, 0xeb, 0x0e,
	0xa9, 0xb5, 0x64, 0x7f, 0x02, 0x38, 0x7b, 0xdd, 0x75, 0xd8, 0x72, 0x73, 0x7f, 0x85, 0xea, 0x50,
	0xae, 0x17, 0x30, 0xaa, 0x91, 0x71, 0x94, 0x3e, 0x54, 0x5f, 0x99, 0x44, 0x3b, 0x89, 0x77, 0xbb,
	0x89, 0x1a, 0xb5, 0x9f, 0xe8, 0xc6, 0xd5, 0x4f, 0xd4, 0x9b, 0x4c, 0xa2, 0xe4, 0x05, 0x84, 0xe8,
	0x38, 0xd2, 0xd1, 0x74, 0x30, 0x8b, 0x17, 0x17, 0x3b, 0xf0, 0x36, 0x27, 0x7a, 0x6f, 0x23, 0x57,
	0x30, 0x76, 0x14, 0x79, 0x21, 0x9a, 0xa6, 0xd2, 0x69, 0xe8, 0x97, 0x69, 0xc5, 0x6b, 0xab, 0x65,
	0x4b, 0x38, 0xff, 0x6f, 0xc8, 0x03, 0x1b, 0x4b, 0x21, 0x54, 0xb7, 0x45, 0x81, 0x4a, 0xf9, 0x65,
	0xdd, 0x97, 0xcf, 0x9f, 0x42, 0xe8, 0xd3, 0x23, 0x09, 0x44, 0xdf, 0x3e, 0x29, 0x94, 0x2b, 0x51,
	0x9e, 0x3e, 0xb0, 0x15, 0x65, 0x37, 0xfa, 0xba, 0xe1, 0xa7, 0xc1, 0xe2, 0x77, 0x00, 0x91, 0xa9,
	0x3e, 0x08, 0x8e, 0xe4, 0x15, 0x0c, 0xcd, 0x1b, 0x21, 0x97, 0xdb, 0x83, 0xf4, 0x9e, 0xf0, 0x64,
	0xb2, 0xef, 0xc8, 0x03, 0x7e, 0x81, 0xf1, 0x16, 0x39, 0xc9, 0xb6, 0xcd, 0xfb, 0x76, 0x37, 0xb9,
	0x3a, 0xe8, 0x71, 0x9d, 0xbf, 0x8e, 0xec, 0xe1, 0xcb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xaa,
	0x5f, 0x99, 0xef, 0x6b, 0x03, 0x00, 0x00,
}

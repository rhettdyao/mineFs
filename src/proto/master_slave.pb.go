// Code generated by protoc-gen-go. DO NOT EDIT.
// source: master_slave.proto

package mineFs_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppendLogRequest struct {
	LogData              [][]byte `protobuf:"bytes,1,rep,name=log_data,json=logData,proto3" json:"log_data,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	Term                 int64    `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendLogRequest) Reset()         { *m = AppendLogRequest{} }
func (m *AppendLogRequest) String() string { return proto.CompactTextString(m) }
func (*AppendLogRequest) ProtoMessage()    {}
func (*AppendLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_master_slave_cb27705983adebd8, []int{0}
}
func (m *AppendLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendLogRequest.Unmarshal(m, b)
}
func (m *AppendLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendLogRequest.Marshal(b, m, deterministic)
}
func (dst *AppendLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendLogRequest.Merge(dst, src)
}
func (m *AppendLogRequest) XXX_Size() int {
	return xxx_messageInfo_AppendLogRequest.Size(m)
}
func (m *AppendLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppendLogRequest proto.InternalMessageInfo

func (m *AppendLogRequest) GetLogData() [][]byte {
	if m != nil {
		return m.LogData
	}
	return nil
}

func (m *AppendLogRequest) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *AppendLogRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

type AppendLogResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Index                int64    `protobuf:"varint,2,opt,name=index" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppendLogResponse) Reset()         { *m = AppendLogResponse{} }
func (m *AppendLogResponse) String() string { return proto.CompactTextString(m) }
func (*AppendLogResponse) ProtoMessage()    {}
func (*AppendLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_master_slave_cb27705983adebd8, []int{1}
}
func (m *AppendLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppendLogResponse.Unmarshal(m, b)
}
func (m *AppendLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppendLogResponse.Marshal(b, m, deterministic)
}
func (dst *AppendLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppendLogResponse.Merge(dst, src)
}
func (m *AppendLogResponse) XXX_Size() int {
	return xxx_messageInfo_AppendLogResponse.Size(m)
}
func (m *AppendLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppendLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppendLogResponse proto.InternalMessageInfo

func (m *AppendLogResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *AppendLogResponse) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type SnapshotRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Seq                  int64    `protobuf:"varint,2,opt,name=seq" json:"seq,omitempty"`
	Index                int64    `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	Term                 int64    `protobuf:"varint,4,opt,name=term" json:"term,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotRequest) Reset()         { *m = SnapshotRequest{} }
func (m *SnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*SnapshotRequest) ProtoMessage()    {}
func (*SnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_master_slave_cb27705983adebd8, []int{2}
}
func (m *SnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotRequest.Unmarshal(m, b)
}
func (m *SnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotRequest.Marshal(b, m, deterministic)
}
func (dst *SnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotRequest.Merge(dst, src)
}
func (m *SnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_SnapshotRequest.Size(m)
}
func (m *SnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotRequest proto.InternalMessageInfo

func (m *SnapshotRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SnapshotRequest) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *SnapshotRequest) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SnapshotRequest) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

type SnapshotResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotResponse) Reset()         { *m = SnapshotResponse{} }
func (m *SnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*SnapshotResponse) ProtoMessage()    {}
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_master_slave_cb27705983adebd8, []int{3}
}
func (m *SnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotResponse.Unmarshal(m, b)
}
func (m *SnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotResponse.Marshal(b, m, deterministic)
}
func (dst *SnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotResponse.Merge(dst, src)
}
func (m *SnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_SnapshotResponse.Size(m)
}
func (m *SnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotResponse proto.InternalMessageInfo

func (m *SnapshotResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*AppendLogRequest)(nil), "mineFs.proto.AppendLogRequest")
	proto.RegisterType((*AppendLogResponse)(nil), "mineFs.proto.AppendLogResponse")
	proto.RegisterType((*SnapshotRequest)(nil), "mineFs.proto.SnapshotRequest")
	proto.RegisterType((*SnapshotResponse)(nil), "mineFs.proto.SnapshotResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MasterSlaveClient is the client API for MasterSlave service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MasterSlaveClient interface {
	AppendLog(ctx context.Context, in *AppendLogRequest, opts ...grpc.CallOption) (*AppendLogResponse, error)
	Snapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*SnapshotResponse, error)
}

type masterSlaveClient struct {
	cc *grpc.ClientConn
}

func NewMasterSlaveClient(cc *grpc.ClientConn) MasterSlaveClient {
	return &masterSlaveClient{cc}
}

func (c *masterSlaveClient) AppendLog(ctx context.Context, in *AppendLogRequest, opts ...grpc.CallOption) (*AppendLogResponse, error) {
	out := new(AppendLogResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.MasterSlave/AppendLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *masterSlaveClient) Snapshot(ctx context.Context, in *SnapshotRequest, opts ...grpc.CallOption) (*SnapshotResponse, error) {
	out := new(SnapshotResponse)
	err := c.cc.Invoke(ctx, "/mineFs.proto.MasterSlave/Snapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MasterSlave service

type MasterSlaveServer interface {
	AppendLog(context.Context, *AppendLogRequest) (*AppendLogResponse, error)
	Snapshot(context.Context, *SnapshotRequest) (*SnapshotResponse, error)
}

func RegisterMasterSlaveServer(s *grpc.Server, srv MasterSlaveServer) {
	s.RegisterService(&_MasterSlave_serviceDesc, srv)
}

func _MasterSlave_AppendLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppendLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterSlaveServer).AppendLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.MasterSlave/AppendLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterSlaveServer).AppendLog(ctx, req.(*AppendLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MasterSlave_Snapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterSlaveServer).Snapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mineFs.proto.MasterSlave/Snapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterSlaveServer).Snapshot(ctx, req.(*SnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MasterSlave_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mineFs.proto.MasterSlave",
	HandlerType: (*MasterSlaveServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppendLog",
			Handler:    _MasterSlave_AppendLog_Handler,
		},
		{
			MethodName: "Snapshot",
			Handler:    _MasterSlave_Snapshot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "master_slave.proto",
}

func init() { proto.RegisterFile("master_slave.proto", fileDescriptor_master_slave_cb27705983adebd8) }

var fileDescriptor_master_slave_cb27705983adebd8 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4f, 0x83, 0x40,
	0x10, 0x85, 0xb3, 0x82, 0x16, 0x47, 0x12, 0x71, 0xe2, 0x01, 0x9b, 0x58, 0x09, 0x27, 0x0e, 0x86,
	0x83, 0xfe, 0x02, 0xa3, 0x31, 0x31, 0xa9, 0x17, 0x7a, 0xf0, 0xd8, 0xac, 0x65, 0x82, 0x4d, 0x80,
	0xdd, 0x32, 0x5b, 0xe3, 0x2f, 0xf2, 0x77, 0x9a, 0x2e, 0x60, 0xb1, 0x69, 0xe3, 0xed, 0xbd, 0x19,
	0x78, 0xf3, 0xed, 0x03, 0xac, 0x24, 0x1b, 0x6a, 0xe6, 0x5c, 0xca, 0x4f, 0x4a, 0x75, 0xa3, 0x8c,
	0x42, 0xbf, 0x5a, 0xd6, 0xf4, 0xcc, 0xad, 0x8b, 0xdf, 0x20, 0x78, 0xd0, 0x9a, 0xea, 0x7c, 0xaa,
	0x8a, 0x8c, 0x56, 0x6b, 0x62, 0x83, 0x57, 0xe0, 0x95, 0xaa, 0x98, 0xe7, 0xd2, 0xc8, 0x50, 0x44,
	0x4e, 0xe2, 0x67, 0xa3, 0x52, 0x15, 0x4f, 0xd2, 0x48, 0xbc, 0x84, 0xe3, 0x65, 0x9d, 0xd3, 0x57,
	0x78, 0x14, 0x89, 0xc4, 0xc9, 0x5a, 0x83, 0x08, 0xae, 0xa1, 0xa6, 0x0a, 0x1d, 0x3b, 0xb4, 0x3a,
	0x7e, 0x84, 0x8b, 0x41, 0x30, 0x6b, 0x55, 0x33, 0x61, 0x08, 0x23, 0x5e, 0x2f, 0x16, 0xc4, 0x1c,
	0x8a, 0x48, 0x24, 0x5e, 0xd6, 0xdb, 0xfd, 0xc1, 0xb1, 0x84, 0xf3, 0x59, 0x2d, 0x35, 0x7f, 0x28,
	0xd3, 0xc3, 0x21, 0xb8, 0x1d, 0x98, 0x48, 0xfc, 0xcc, 0x6a, 0x0c, 0xc0, 0x61, 0x5a, 0x75, 0xbf,
	0x6e, 0xe4, 0x36, 0xce, 0xd9, 0xc7, 0xe9, 0x0e, 0x38, 0x6f, 0x21, 0xd8, 0x9e, 0xf8, 0x0f, 0xf3,
	0xee, 0x5b, 0xc0, 0xd9, 0xab, 0xed, 0x74, 0xb6, 0xa9, 0x14, 0xa7, 0x70, 0xfa, 0xfb, 0x4a, 0x9c,
	0xa4, 0xc3, 0x6a, 0xd3, 0xdd, 0x5e, 0xc7, 0x37, 0x07, 0xf7, 0xdd, 0xdd, 0x17, 0xf0, 0x7a, 0x16,
	0xbc, 0xfe, 0xfb, 0xf1, 0x4e, 0x0d, 0xe3, 0xc9, 0xa1, 0x75, 0x1b, 0xf5, 0x7e, 0x62, 0xe7, 0xf7,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x99, 0xd7, 0xac, 0x02, 0x02, 0x00, 0x00,
}
